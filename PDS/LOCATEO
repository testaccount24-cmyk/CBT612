***********************************************************************
*
*        LOCATE IS A TSO COMMAND PROCESSOR USED TO LOCATE A NAMED
*        MODULE IN EITHER THE F/MLPA, LPA OR VIA THE LINK LIST.
*        RELEVANT INFORMATION AND LOCATION IS DISPLAYED TO THE USER.
*        SEARCH SEQUENCE
*               - JPA
*               - ISPLLIB IF UNDER ISPF
*               - ACTIVATE TSOLIB                                @02A
*               - JOBLIB
*               - STEPLIB
*               - TASKLIB
*               - FLPA
*               - PLPA
*               - DYNAMIC LINKLIST                               @01A
*        MISC
*               - NUCLEUS (INVOKE NUCLKUP)
*
*   ENHANCEMENT:
*        IF THE LOAD MODULE IS FOUND ON THE LINKLIST, THE DSN IS ALSO
*        DISPLAYED                                  AC 14 SEP 1990
*        SEARCH NUCLEUS MAP IF THE MODULE DOES NOT EXIST AT LINKLIST
*        OR LPA. FIX THE BUG OF DISPLAYING F/MLPA.
*                                                   AC 02 NOV 1990
*        DISPLAY THE LOAD ADDRESS AND IN-USE COUNT IF THE LOAD MODULE
*        IS FOUND AT JPA.
*                                                   AC 30 JUN 1992
*  @01   SUPPORT OS/390 DYNAMIC LINKLST
*                                                   AC 03 NOV 2000
*  @02   REPLACE TPUT WITH PUTLINE AND THE LOCATE
*        COMMAND CAN INVOKE AT BATCH MODE           AC 18 DEC 2009
*  @03   TURN OFF HIGH ORDER BIT OF NUCLEUS MODULE
*        DISPLAY THE LENGTH OF THE NUCLUES MODULE   AC 20 AUG 2013
***********************************************************************
LOCATE   $PROLOG
         USING CPPL,R1          ADDRESSABILITY FOR CPPL
         MVC   CMDUPT,CPPLUPT   COPY UPT ADDRESS
         MVC   CMDECT,CPPLECT   COPY ECT ADDRESS
         L     R10,CPPLUPT                                        @02A
         L     R11,CPPLECT                                        @02A
         MVC   CMDCBUF,CPPLCBUF COPY ADDRESS OF COMMAND BUF
         DROP  R1
         LA    R1,CMDUPT      PROVIDE LIST FOR PARSE
         LINK  EP=IKJPARS     PARSE COMMAND
         L     R2,CMDANSR     GET POINTER TO ANSWER AREA
         USING IKJPARMD,R2    PROVIDE ADDRESSABILITY
         L     R1,IKJOPT      GET POINTER TO OPERAND
         LH    R2,IKJOPT+4    GET SIZE OF OPERAND
         DROP  R2
         BCTR  R2,R0          DECREMENT FOR EXECUTE
         EX    R2,MOVENAME    MOVE TO LIST FOR LOAD
         MVC   BLDLNAME(8),NAME    MOVE NAME TO BLDL LIST
         MVC   MSG2NAME(8),NAME    MOVE NAME TO MSG2
         L     R3,X'21C'      LOAD CURRENT TCB
         USING TCB,R3
         L     R3,TCBJSTCB
TCBLOOP  SR    R15,R15
         ICM   R15,7,TCBJPQB  LOAD JOB PACK QUEUE
         USING CDENTRY,R15
         BZ    NEXTTCB        NO, SEARCH THE MLPA/FLPA
         B     FIRSTJPA
NEXTJPA  L     R15,CDCHAIN    1ST CDE ON THE QUEUE
         LTR   R15,R15        ANYTHING ON THE QUEUE?
         BZ    NEXTTCB        NO, SEARCH THE MLPA/FLPA
FIRSTJPA CLC   NAME,CDNAME    NAMES EQUAL?
         BNE   NEXTJPA        YES, FOUND
         XC    RETCODE,RETCODE INDICATE MODULE FOUND
         TM    CDATTR,CDMIN   MINOR CDE?
         BZ    CDEMAJ1        NO, CONTINUE
         MVC   JPATRUE,CDNAME COPY TRUE NAME
         L     R15,CDXLMJP    LOCATE MAJOR CDE
CDEMAJ1  DS    0H
         MVC   JPANAME,CDNAME COPY MODULE NAME
         UNPK  JPAADR(9),CDENTPT(5)   UNPACK ADDRESS FOR PRINT
         TR    JPAADR(8),TRTABLE-240  MAKE PRINTABLE
         MVI   JPAADR+8,C' '          CLEAR GARBAGE FROM UNPACK
         UNPK  JPAUSE(5),CDUSE(3)     UNPACK ADDRESS FOR PRINT
         TR    JPAUSE(4),TRTABLE-240  MAKE PRINTABLE
         MVI   JPAUSE+5,C' '          CLEAR GARBAGE FROM UNPACK
         CLI   JPATRUE,C' '   ALIAS NAME EXIST ??
         BNE   CDEMIN1        BRANCH IF YES
*        TPUT  MSG5,LMSG5     DISPLAY MAJOR NAME                   @02D
         MVC   TEXT+0(L'MSG5),MSG5    DISPLAY MAJOR NAME           @02A
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
         B     LPAQ           SCAN LPA
*DEMIN1  TPUT  MSG5,LMSG5A    DISPLAY MAJOR AND MINOR NAME         @02D
CDEMIN1  MVC   TEXT+0(LMSG5A),MSG5   DISPLAY MAJOR AND MINOR NAME  @02A
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)                                      @02A
NEXTTCB  ICM   R3,15,TCBNTC
         BNZ   TCBLOOP
         DROP  R15
LPAQ     L     R3,16          GET CVT ADDR
         USING CVT,R3
         L     R15,CVTQLPAQ   ACTIVE LPA QUEUE ADDRESS
         USING CDENTRY,R15
         LTR   R15,R15        ANYTHING ON THE QUEUE?
         BZ    DIRSRCH        NO, SEARCH THE LPA DIRECTORY
         B     FIRSTLPA
CDELOOP2 DS    0H
         LTR   R15,R15        ANYTHING ON THE QUEUE?
         BZ    DIRSRCH        NO, SEARCH THE LPA DIRECTORY
         CLC   NAME,CDNAME    NAMES EQUAL?
         BE    CDECHK2        YES, FOUND
FIRSTLPA L     R15,CDCHAIN    1ST CDE ON THE QUEUE
         B     CDELOOP2
CDECHK2  XC    RETCODE,RETCODE  INDICATE MODULE FOUND
         TM    CDATTR,CDMIN     MINOR CDE?
         BZ    CDEMAJ2          NO, CONTINUE
         MVC   FLPATRUE,CDNAME  COPY TRUE NAME
         L     R15,CDXLMJP      LOCATE MAJOR CDE
CDEMAJ2  DS    0H
         MVC   FLPANAME,CDNAME  COPY MODULE NAME
         UNPK  FLPAADR(9),CDENTPT(5)   UNPACK ADDRESS FOR PRINT
         TR    FLPAADR(8),TRTABLE-240  MAKE PRINTABLE
         MVI   FLPAADR+8,C' '          CLEAR GARBAGE FROM UNPACK
         CLI   FLPATRUE,C' '  ALIAS NAME EXIST ??
         BNE   CDEMIN2        BRANCH IF YES
*        TPUT  MSG4,LMSG4     DISPLAY MAJOR NAME                   @02D
         MVC   TEXT+0(LMSG4),MSG4  DISPLAY MAJOR NAME              @02A
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)                                      @02A
         B     DIRSRCH        SCAN LPA
*DEMIN2  TPUT  MSG4,LMSG4A    DISPLAY MAJOR AND MINOR NAME         @02D
CDEMIN2  MVC   TEXT+0(LMSG4A),MSG4  DISPLAY MAJOR AND MINOR NAME   @02A
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)                                      @02A
         DROP  R15
DIRSRCH  LM    R0,R1,NAME     PICK UP THE NAME
         L     R6,CVTLPDSR    LPA SEARCH ROUTINE ADDR
         DS    0Y(R8,R9)      ROUTINES USES THESE REGISTERS
SRCHLPA  BALR  R14,R6         SEARCH LPA DIRECTORY
         B     GOTIT          IT'S THERE
         B     NOTLPA         BRANCH IF NOT THERE
GOTIT    XC    RETCODE,RETCODE INDICATE MODULE FOUND
         LR    R4,R0          PUT LPDE ADDR WHERE IT CAN DO SOME GOOD
         USING LPDE,R4        INFORM THE ASSEMBLER
         TM    LPDEATTR,LPDEMIN        MINOR LPDE?
         BZ    LPTRUE                  NO, PROCESS MAJOR
         MVC   TRUENM,LPDEMJNM         YES, COPY TRUE NAME
         LM    R0,R1,LPDEMJNM          PUT IT IN REGS
         B     SRCHLPA                 GET MAJOR LPDE
LPTRUE   UNPK  LENGTH(7),LPDEXTLN+1(4) UNPACK LENGTH FOR PRINT
         TR    LENGTH(6),TRTABLE-240   MAKE PRINTABLE
         MVI   LENGTH+6,C' '           CLEAR GARBAGE FROM UNPACK
         UNPK  ADDRESS(9),LPDEXTAD(5)  UNPACK ADDRESS FOR PRINT
         TR    ADDRESS(8),TRTABLE-240  MAKE PRINTABLE
         MVI   ADDRESS+8,C' '          CLEAR GARBAGE FROM UNPACK
         DROP  R4
LPAMSG   CLI   TRUENM,C' '    IS THIS AN ALIAS?
         BNE   TPUTA          YES, ISSUE ALIAS TPUT
*        TPUT  MSG1,LMSG1     MESSAGE WITHOUT ALIAS NAME           @02D
         MVC   TEXT+0(LMSG1),MSG1 MESSAGE WITHOUT ALIAS NAME       @02A
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)                                      @02A
         B     NOTLPA         SEE IF IN LNKLST ALSO
*PUTA    TPUT  MSG1,LMSG1A    MESSAGE WITH ALIAS NAME              @02D
TPUTA    MVC   TEXT+0(LMSG1A),MSG1  MESSAGE WITH ALIAS NAME        @02A
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)                                      @02A
NOTLPA   BLDL  0,LIST         LOCATE MODULE IN JOB/STEP/LINKLIST LIB
         LTR   R15,R15        CHECK RETURN CODE
         BNZ   NOTLINK        NOT FOUND IN LINKLIST
         SR    R1,R1          CLEAR FOR IC
         IC    R1,BLDLK       PICK UP CONCATINATION NUMBER
         XC    RETCODE,RETCODE INDICATE MODULE FOUND
         TM    BLDLC,X'80'    IS THIS AN ALIAS?
         BZ    NOTALIAS       NO, MAJOR NAME
         MVC   MODTYPE(5),=C'MINOR'   INDICATE MODULE IS ALIAS
NOTALIAS CLI   BLDLZ,X'00'    PRIVATE LIBRARY?
         BE    CONCAT         YES, ALL SET
         MVC   LIBTYPE(12),=C'JOB/STEP LIB' MODIFY MESSAGE TEXT
         CLI   BLDLZ,X'01'    LINKLIB/LINK LIST LIBRARY?
         BNH   DYNAMIC        NO, ALL SET                          @03C
CONCAT   XC    DBLWD,DBLWD    CLEAR FOR CONVERT
         CVD   R1,DBLWD       CONVERT TO DECIMAL
         MVI   DSN,C'('       ADD LEADING PAREN
         UNPK  DSN+1(2),DBLWD+6(2) UNPACK FOR PRINT
         OI    DSN+2,X'F0'    MAKE PRINTABLE
         MVI   DSN+3,C')'     ADD TRAILING PAREN
DYNAMIC  DS    0H             HANDLE DYNAMIC LINKLIST              @01A
         MVC   LIBTYPE(12),=C'DYNAM LNKLST'   MODIFY MESSAGE TEXT
         MODESET MODE=SUP,KEY=ZERO
         CSVDYNL REQUEST=TEST,LNKLSTNAME=LSTNAME,MODNAME=BLDLNAME,     X
               RETCODE=CSVRET,RSNCODE=CSVRSN,FOUNDDSNAME=DSN
         LTR   R15,R15
         BNZ   RESETAUT                       BRANCH IF NOT FOUND  @03C
         OI    DYNFLAG,X'80'                  TURN ON FIND FLAG    @03A
RESETAUT MODESET MODE=PROB,KEY=NZERO                               @03C
         TM    DYNFLAG,X'80'                  FIND IN DYNAMIC LINK @03A
         JNO   NOTLINK                        BRANCH IF NOT FOUND  @03A
DISPLAY  MVC   TEXT+0(LMSG2),MSG2
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
EXIT     OC    RETCODE,RETCODE ANY MESSAGE ISSUED (MODULE FOUND) ?
         BZ    RETURN         YES, ALL DONE
*        TPUT  MSG0,LMSG0     INFORM USER                          @02D
         MVC   TEXT+0(LMSG0),MSG0      INFORM USER                 @02A
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)                                      @02A
RETURN   IKJRLSA CMDANSR      RELEASE PARSE STORAGE
         L     R15,RETCODE    SET RETURN CODE
         $EPILOG
NOTLINK  DS    0H
         LA    R1,BLDLNAME
         NUCLKUP NAME=(1),ADDR=(3)   INVOKE NUCLEUS MAP LOOKUP SRV
         LTR   R15,R15
         JNZ   EXIT
         TMLH  R3,X'8000'             HIGH ORDER BIT IS ON         @03A
         JNO   FMTADDR                BRANCH IF HIGH ORDER BIT OFF @03A
         NILH  R3,X'7FFF'             TURN OFF HIGH ORDER BIT      @03A
FMTADDR  ST    R3,DBLWD
         UNPK  NADDRESS(9),DBLWD(5)   UNPACK ADDRESS FOR PRINT
         TR    NADDRESS(8),TRTABLE-240 MAKE PRINTABLE
         MVI   NADDRESS+8,C' ' CLEAR GARBAGE FROM UNPACK
         ST    R1,DBLWD                                            @03A
         UNPK  NLEN(9),DBLWD(5)       UNPACK ADDRESS FOR PRINT     @03A
         TR    NLEN(8),TRTABLE-240    MAKE PRINTABLE               @03A
         MVI   NLEN+8,C' '            CLEAR GARBAGE FROM UNPACK    @03A
         MVC   MSG3NAME,BLDLNAME
*        TPUT  MSG3,LMSG3                                          @02D
         MVC   TEXT+0(LMSG3),MSG3          DISPLAY NUCLUES MODULE  @02A
         PUTLINE PARM=PUTBLOCK,UPT=(10),ECT=(11),                      X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)                                      @02A
         B     RETURN
MOVENAME MVC   NAME(0),0(R1)  MOVE NAME FOR LOAD
*-------------------------------------------------------------------
LIST     DC    H'1',H'14'     BLDLLIST
BLDLNAME DC    CL8' '         BLDL NAME OF MODULE
BLDLTTR  DC    XL3'00'        TTR OF MODULE
BLDLK    DC    X'00'          CONCATINATION NUMBER
BLDLZ    DC    X'00'          LOCATION
BLDLC    DC    X'00'          ENTRY TYPE
*-------------------------------------------------------------------
MSG0     DS    0F
         DC    C'REQUESTED MODULE NOT FOUND IN EITHER LPA, '
         DC    C'LNKLST, NUCLEUS OR JOB/TASK/STEPLIB'
LMSG0    EQU   *-MSG0                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG1     DS    0F
         DC    C'PLPA MODULE   '
NAME     DC    CL8' '
         DC    C' IS: '
LENGTH   DC    CL6' '
         DC    C' BYTES AT '
ADDRESS  DC    CL8' '                MVS/XA
LMSG1    EQU   *-MSG1                SIZE OF MESSAGE
         DC    C' (ALIAS OF '
TRUENM   DC    CL8' ',C')'         TRUE NAME IF GIVEN NAME IS AN ALIAS
LMSG1A   EQU   *-MSG1                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG2     EQU   *
MSG2NAME DC    CL8' '
         DC    C' FOUND AS A '
MODTYPE  DC    C'MAJOR'
         DC    C' NAME IN '
LIBTYPE  DC    C'PRIVATE LIB  '
DSN      DC    CL36' '
LMSG2    EQU   *-MSG2         SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG3     DS    0F
         DC    C'NUCLEUS MODULE : '
MSG3NAME DC    CL8' '
*        DC    C' BYTES AT '                                     @01D
*ADDRESS DC    CL9' '                NUCLEUS ADDRESS             @01D
         DC    C' EPA '                                          @01C
NADDRESS DC    CL9' '                NUCLEUS MODULE EPA          @01A
         DC    C' LENGTH IN HEX '                                @01A
NLEN     DC    CL9' '                LENGTH OF THE MODULE        @01A
LMSG3    EQU   *-MSG3                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG4     DS    0F
         DC    C'F/MLPA MODULE '
FLPANAME DC    CL8' '
         DC    C' AT '
FLPAADR  DC    CL8' '                FLPA ADDRESS
LMSG4    EQU   *-MSG4                SIZE OF MESSAGE
         DC    C' (ALIAS OF '
FLPATRUE DC    CL8' ',C')'         TRUE NAME IF GIVEN NAME IS AN ALIAS
LMSG4A   EQU   *-MSG4                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG5     DS    0F
         DC    C'JPA MODULE '
JPANAME  DC    CL8' '
         DC    C' AT '
JPAADR   DC    CL8' '                JPA ADDRESS
         DC    CL14' IN USE COUNT '
JPAUSE   DC    CL4' '
LMSG5    EQU   *-MSG5                SIZE OF MESSAGE
         DC    C' (ALIAS OF '
JPATRUE  DC    CL8' ',C')'         TRUE NAME IF GIVEN NAME IS AN ALIAS
LMSG5A   EQU   *-MSG5                SIZE OF MESSAGE
*-------------------------------------------------------------------
DYNFLAG  DC    X'00'                 DYNAMIC LINK MODULE FLAG     @03A
CSVRET   DC    F'0'                                               @01A
CSVRSN   DC    F'0'                                               @01A
TRTABLE  DC    C'0123456789ABCDEF' TRANSLATE TABLE
LSTNAME  DC    CL16'CURRENT'                                      @01A
BLANKS   DC    CL81' '        BLANKS
DBLWD    DC    D'0'           WORKAREA
ADDR     DC    F'0'           ADDRESS WORK AREA
ECB      DC    F'0'           DUMB ECB FOR PARSE
RETCODE  DC    F'4'           RETURN CODE (AND MSG SWITCH)
CMDANSR  DC    F'0'           PARSE ANSWER AREA POINTER
CMDUPT   DC    F'0'           USER PROFILE TABLE POINTER
CMDECT   DC    F'0'           ENVIRONMENT CONTROL TABLE
CMDECB   DC    A(ECB)         ECB POINTER
CMDPCL   DC    A(IKJPCL)      ADDRESS OF IKJPARM
CMDANS   DC    A(CMDANSR)     PLACE TO PUT ANSWER
CMDCBUF  DC    F'0'           POINTER TO COMMAND BUFFER
ECBADS   DS    F'0'            SPACE FOR THE EVENT CONTROL BLOCK   @02A
TEXTADS  DC    H'83'           LENGTH OF THE OUTPUT LINE           @02A
         DC    H'0'            RESERVED                            @02A
TEXT     DS    CL79                                                @02A
IOPLADS  DC    4F'0'           SPACE FOR THE INPUT AND OUTPUT PARM @02A
PUTBLOCK PUTLINE MF=L      LIST FORM OF THE PUTLINE MACRO INST     @02A
         LTORG
IKJPCL   IKJPARM
IKJOPT   IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ALPHA,                 X
               OTHER=ALPHANUM,PROMPT='NAME OF MODULE TO LOCATE'
         IKJENDP
         IKJCPPL
         IKJTCB
         IHALPDE
         IHACDE
         CVT DSECT=YES,LIST=NO
         YREGS
         END
