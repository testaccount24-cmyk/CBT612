         TITLE 'DISPLAY THE PPT TABLE'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS AN APF         *
*                   AUTHORIZED BATCH PROGRAM AND IT MUST RESIDES IN   *
*                   AN APF LIBRARY. THIS PROGRAM IS MODIFIED FROM     *
*                   CBT 835. TSO COMMAND PPTD MUST BE REGISTERED IN   *
*                   IKJTSO00 AND SOME INSTALLATION DOES NOT ALLOW     *
*                   CBT AUTHORISED COMMAND IN IKJTSO00.               *
*                                                                     *
*       FUNCTION:   TO LIST THE ENTRIES TO THE PROGRAM PROPERTIES     *
*                   TABLE OF THE Z/OS OPERATING SYSTEM.  THESE ARE    *
*                   SPECIAL PROGRAMS THAT RUN WITH SPECIAL PROPER-    *
*                   TIES, SUCH AS NON-CANCELABLE, NON-SWAPPABLE,      *
*                   OR IN A PARTICULAR STORAGE KEY, ETC.              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        CHANGES:   PUT IN PROTECTION AGAINST S047 ABENDS  (SBG)      *
*                   IF PROGRAM IS NOT RUN APF-AUTHORIZED.             *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
ZERO     EQU   X'00'                   ZERO
SPACE    EQU   C' '                    SPACE
SIGNF    EQU   X'F0'                   POSITIVE SIGN
SHOWPPT  CSECT
         BAKR  R14,0                   SAVE CALLER'S ARS + GPRS
*                                      IN THE LINKAGE STACK
         USING SHOWPPT,R12             SET UP PROGRAM BASE REGISTER
         LAE   R12,0(R15,0)            SET UP PROGRAM BASE REGISTER
*                                      TO INDICATE STATUS SAVED ON
*                                      THE LINKAGE STACK.
         OPEN  (SYSPRINT,OUTPUT)       OPEN FILE
*  -----     Test for Authorization    -   below
ISITAUTH DS    0H
         STM   R15,R1,SAVE1401     Now save registers and test if APF
         XR    R15,R15                  authorized.
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.
*  -----     Test for Authorization    -   above
         PUT   SYSPRINT,HEADING
         SAM31
         BRAS  R3,SCANPPT              SCAN THE PPT
         SAM24
ENDD     DS    0H
         CLOSE SYSPRINT                CLOSE FILE
         PR                            RETURN TO CALLER
SCANPPT  DS    0H                      SCAN THE PPT TABLE
         MVC   PPTMACRO,PPTABLE        MOVE THE IEFPPSCN MACRO AREA
         XC    PPTTOKEN,PPTTOKEN       START AT TOP OF PPT
         SR    R11,R11                 CLEAR LINE COUNT
PPTRUN   DS    0H
         MODESET MODE=SUP,KEY=ZERO     SUPERVISOR KEY 0 STATE
         LA    R9,PPTINFO              @ PPT RETURN AREA
         LA    R10,PPTMACRO            @ PPT MACRO AREA
         IEFPPSCN REQUEST=NEXT,TOKEN=PPTTOKEN,PPTINFO=(R9),            X
               MF=(E,(R10),COMPLETE)
         LTR   R15,R15                 END OF SCAN?
         JNZ   PPTEND                  END THE PPT SCAN
         MODESET MODE=PROB,KEY=NZERO   PROBLEM KEY 8 STATE
         LA    R8,PPTENT               @ OF PPT INFO
         USING PPT1,R8                 INFORM THE ASSEMBLER
         MVC   GPPTNAME,PPTNAME        PROGRAM NAME
         MVC   GPPTNCNC,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTNCNCL       NON CANCEL?
         JNO   SPECPKEY                NO-
         MVC   GPPTNCNC,=CL3'YES'      SET
SPECPKEY DS    0H
         MVC   GPPTSKEY,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTSKEY        SPECIAL STORAGE KEY?
         JNO   NONSWAP                 NO-
         MVC   GPPTSKEY,=CL3'YES'      SET
NONSWAP  DS    0H
         MVC   GPPTNSWP,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTNSWP        NON-SWAPPABLE?
         JNO   PRIV                    NO-
         MVC   GPPTNSWP,=CL3'YES'      SET
PRIV     DS    0H
         MVC   GPPTPRIV,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTPRIV        PRIVILEGED?
         JNO   SYSTASK                 NO-
         MVC   GPPTPRIV,=CL3'YES'      SET
SYSTASK  DS    0H
         MVC   GPPTSYST,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTSYSTK       SYSTEM TASK?
         JNO   NDSI                    NO-
         MVC   GPPTSYST,=CL3'YES'      SET
NDSI     DS    0H
         MVC   GPPTNDSI,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTNDSI        DATASET INTEGRITY?
         JO    NOPASS                  NO-
         MVC   GPPTNDSI,=CL3'YES'      SET
NOPASS   DS    0H
         MVC   GPPTNOPS,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTNOPAS       BYPASS PASSWORD PROTECTION?
         JNO   PROTKY                  NO-
         MVC   GPPTNOPS,=CL3'YES'      SET
PROTKY   DS    0H
         SR    R7,R7                   ZEROIZE
         IC    R7,PPTKEY               PICK UP THE PROTECT KEY
         SRL   R7,4(0)                 MOVE INTO LOW BYTE
         CVD   R7,DW                   CONVERT TO DECIMAL
         UNPK  UNPKKEY,PROTKEY         MAKE IT READABLE
         OI    UNPKKEY+L'UNPKKEY-1,X'F0'  FORCE SIGN TO F
         MVC   GPPTKEYS,UNPKKEY+1      MOVE TO REXX AREA
CPUAFF   DS    0H
         LA    R5,PPTCPUA              @ CPU AFFINITY
         LA    R6,L'PPTCPUA            LENGTH TO CONVERT
         LA    R7,GPPTCPUA             @ OUTPUT AREA
CPUAFFCN DS    0H
         SR    R4,R4                   ZEROIZE
         IC    R4,0(R5)                CHARACTER TO CONVERT
         SRL   R4,4(0)                 REMOVE LOW NIBBLE
         STC   R4,CHAR                 STORE
         BRAS  R2,HEXCONV              DO THE HEX CONVERSION
         MVC   0(1,R7),CHAR            MOVE TO OUTPUT AREA
         LA    R7,1(,R7)               NEXT POSITION IN OUTPUT AREA
         MVC   CHAR,0(R5)              NEXT NIBBLE
         NI    CHAR,X'0F'              REMOVE LOW NIBBLE
         BRAS  R2,HEXCONV              DO THE HEX CONVERSION
         MVC   0(1,R7),CHAR            MOVE TO OUTPUT AREA
         LA    R7,1(,R7)               NEXT POSITION IN OUTPUT AREA
         LA    R5,1(,R5)               NEXT BYTE TO CONVERT
         BRCT  R6,CPUAFFCN             DO WHILE R6 > 0?
P2LPU    DS    0H
         MVC   GPPT2LPU,=CL3'NO '      DEFAULT
         TM    PPTPUBYT,PPT2LPU        2ND LEVEL PREFERED STORAGE
         JNO   P1LPU                   NO-
         MVC   GPPT2LPU,=CL3'YES'      SET
P1LPU    DS    0H
         MVC   GPPT1LPU,=CL3'NO '      DEFAULT
         TM    PPTPUBYT,PPT1LPU        1ST LEVEL PREFERED STORAGE   PG1
         JNO   PORIG                   NO-
         MVC   GPPT2LPU,=CL3'YES'      SET                          PG1
PORIG    DS    0H
         MVC   GPPTORIG,=CL3'YES'      DEFAULT
         TM    PPTORIG,PPTDEFLT        ORIGIN?
         JO    OUTPUT                  OUTPUT
         MVC   GPPTORIG,=CL3'NO '      SET
OUTPUT   DS    0H
         SAM24                         SWITCH TO 24 BIT ADDRESSING
         PUT   SYSPRINT,PRTLINE
         AHI   R11,1                   INCREMENT LINE COUNT
         CHI   R11,18                  ASSUME VIEW THE OUTPUT IN
         JNE   NOPGBRK                   TSO AND SET LINE COUNT
         PUT   SYSPRINT,HEADING            TO 18
         SR    R11,R11                 CLEAR LINE COUNT
NOPGBRK  SAM31                         SWITCH TO 31 BIT ADDRESSING
         J     PPTRUN                  YES
PPTEND   DS    0H
         SR    R15,R15                 RC=0
         MODESET MODE=PROB,KEY=NZERO   PROBLEM KEY 8 STATE
         BR    R3                      RETURN TO CALLER
HEXCONV  DS    0H                      PRINT HEX ROUTINE
         CLI   CHAR,X'09'              > 9?
         JH    HEX10                   YES-
         OI    CHAR,X'F0'              RANGE F0-F9
         BR    R2                      RETURN TO CALLER
HEX10    DS    0H
         XR    R4,R4                   ZEROIZE
         IC    R4,CHAR                 INSERT CHAR INTO REG
         AHI   R4,-9                   GET CHAR NO
         STC   R4,CHAR                 STORE
         OI    CHAR,X'C0'              RANGE C0-C6
         BR    R2                      RETURN TO CALLER
NOTAUTH  DS    0H
         PUT   SYSPRINT,NOTAUTHM
         B     ENDD
SAVEAREA DC    CL72'    F1SA'          SAVEAREA
SAVE1401 DC    5F'0'                   MORE FOR SAFETY
DW       DS    D                       WORK AREA
UNPKKEY  EQU   DW,3                    UNPACKED PROTECT KEY
UNPKSTEM EQU   DW,3                    UNPACKED STEM
PROTKEY  EQU   DW+6,2                  PROTECT KEY
CHAR     DS    C                       A LONE CHARACTER
PPTTOKEN DS    XL4                     IEFPPSCN TOKEN
PPTMACRO DS    CL(PPTABLEL)            IEFPPSCN MACRO AREA
PPTINFO  DS    0X                      PPT RETURN AREA
PPTELEN  DS    AL2                     MAX PPT ENTRY LENGTH
PPTENT   DS    CL(L'PPTENTRY)          PPT ENTRY LENGTH
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
NOTAUTHM DS    0CL80
         DC    CL80' THIS PROGRAM NEEDS TO BE AUTHORIZED... '
HEADING  DS    0CL80
         DC    CL9'NAME'
         DC    CL6'CANCEL'
         DC    CL5' KEY '
         DC    CL6' NSWAP'
         DC    CL5' PRIV'
         DC    CL5' SYS '
         DC    CL5' DSI '
         DC    CL5' PWD '
         DC    CL5'PKEY '
         DC    CL6' AFFI '
         DC    CL5'2LVL '
         DC    CL5'1LVL '
         DC    CL13'DFT ENTRY'
PRTLINE  DS    0CL80
GPPTNAME DC    CL8' '                  PROGRAM NAME
         DC    C'  '
GPPTNCNC DC    CL3' '                  NON/CANCEL
         DC    C'   '
GPPTSKEY DC    CL3' '                  SPECIAL PROTECT KEY
         DC    C'   '
GPPTNSWP DC    CL3' '                  NON/SWAPPABLE
         DC    C'  '
GPPTPRIV DC    CL3' '                  PRIVILEGED
         DC    C'  '
GPPTSYST DC    CL3' '                  SYSTEM TASK
         DC    C'  '
GPPTNDSI DC    CL3' '                  DSI
         DC    C'  '
GPPTNOPS DC    CL3' '                  BYPASS PASSWORD PROTECTION
         DC    C'  '
GPPTKEYS DC    CL2' '                  PROTECT KEY
         DC    C'   '
GPPTCPUA DC    CL4' '                  CPU AFFINITY
         DC    C'  '
GPPT2LPU DC    CL3' '                  2ND LEVEL STORAGE
         DC    C'  '
GPPT1LPU DC    CL3' '                  1ST LEVEL STORAGE
         DC    C'  '
GPPTORIG DC    CL3' '                  IBM DEFAULT ENTRY
         DC    CL9' '
GPPTLEN  EQU   *-GPPTNAME              ENTRY LENGTH
         LTORG
*
* PPTSCAN ASSEMBLER ROUTINE
*
         PRINT NOGEN
         IEFPPSCN MF=(L,PPTABLE,0D)
         YREGS
         CVT   DSECT=YES,LIST=NO       CVT DSECT
         IEFJESCT                      JES2 CT
         IEFZB610                      PPT
         IKJTSVT                       TSVT
         END   SHOWPPT
