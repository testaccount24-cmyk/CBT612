SRCHLOG TITLE 'SYSLOG SEARCH UTILITY'
*
*---------------------------------------------------------------------*
*  AUTHOR  - ALBERT CP CHENG                                          *
*                                                                     *
*  SRCHLOG - SEARCH SYSLOG WITH RECFM VB AND SEARCH STRING FROM       *
*            ACCORDING TO THE PARAMETERS FROM SYSIN                   *
*            1) ONE SEARCH STRING PER INPUT LINE                      *
*            2) THE LENGTH OF EACH STRING CANNOT EXCEED 40.           *
*            3) SPACE IS ALLOWED IN THE SEARCH STRING AND THE DEFAULT *
*               DELIMITER IS #.                                       *
*            4) THE MAXIMUM NUMBER OF SEARCH STRINGS ARE 250.         *
*            5) READ MULTIPLE LINES OF SYSLOG AS 1 MESSAGE. IF THE    *
*               STRING IS FOUND, THE ENTIRE MESSAGE (INCLUDING ALL    *
*               THE MULTIPLE LINES) ARE DISPLAYED.                    *
*            6) THE LIMIT OF MULTIPLE LINES IS 200.                   *
*            7) RETURN CODE 4 MEANS PROCESSING IS CONTIUNED           *
*            8) RETURN CODE 8 MEANS THE PROCESSING IS ABORTED         *
*            9) RECFM OF DDNAME SYSLOG/PRTFILE IS VBA                 *
*           10) LRECL OF DDNAME SYSLOG/PRTFILE IS 135                 *
*           11) MSG IEE174I/$HASP881 HAVE MORE THAN 200               *
*               MULTIPLE LINES                                        *
*                                                                     *
*       RC    MESSAGE                                                 *
*       8    'ERROR - SEARCH STRING LENGTH > 40 OR NO DELIMITER'      *
*       8    'ERROR - NUMBER OF SEARCH STRINGS > 250'                 *
*       8    'ERROR - NO SEARCH PARAMETERS'                           *
*       4    'ERROR - SKIP SEARCHING MULTIPLE LINES BEYOND 200'       *
*       4    '                   STRING NOT FOUND !!!'                *
*                                                                     *
*       JCL - //PRINT   EXEC PGM=SRCHLOG,PARM='!'                     *
*             //STEPLIB   DD DSN=YOUR.LOADLIB,DISP=SHR                *
*             //SYSLOG    DD DSN=SYSLOG.DATASET.NAME,DISP=SHR         *
*             //PRTFILE   DD SYSOUT=*                                 *
*             //SYSIN     DD *                                        *
*             IEC161I 072-053!                                        *
*             COMPLETION CODE=4039!                                   *
*             //                                                      *
*                                                                     *
* ENHANCEMENT :                                                       *
*   1) SET THE LIMIT OF MULTIPLE LINES TO 200 AND        23.05.2018   *
*      IGNORES SEARCH THE STRING BEYOND LINE 200.                     *
*   2) ACCEPT DELIMITER FROM PARAMETER AND THE           31.05.2018   *
*      DEFAULT DELIMITER IS #                                         *
*---------------------------------------------------------------------*
         YREGS
SRCHLOG  CSECT
         BAKR  R14,0                   * SAVE R0-R15 TO LINKAGE STACK
         LR    R12,R15                 * ESTABLISH ADDRESSIBILITY
         USING SRCHLOG,R12             * TO R12 (IE R12 IS BASE REG)
         USING LOGREC,R9               *
         J     GETPARM                 *
         DC    C'&SYSDATE &SYSTIME'
GETPARM  DS    0H                      *
         L     R1,0(R1)                * GET PARM LIST ADDR
         LH    R15,0(R1)               * LOAD PARM LENGTH
         LTR   R15,R15                 * PARAMETER LENGTH = 0 ??
         JZ    OPENFILE                * BRANCH IF NOT ZERO
         MVC   DELIMIT,2(R1)           * MOVE DELIMITER
OPENFILE OPEN  (SYSLOG,(INPUT),SYSIN,(INPUT),PRINT,(OUTPUT))
         LTR   R15,R15                 * OPEN FILE ERROR ?
         JNZ   EXIT                    * EXIT IF RC IS NON ZERO
         STORAGE OBTAIN,LENGTH=37520   * 250*41 (10250) 135*202(27270)
         LR    R7,R1                   * SAVE ADDRESS OF SEARCH STR TBL
         ST    R1,SRCHTBL              * ADDRESS OF SEARCH STRING TABLE
         SR    R11,R11                 * CLEAR R11
         AHI   R1,10250                *
         ST    R1,LOGTBL               * ADDRESS OF LOGREC TABLE
READPRM  GET   SYSIN,INBUF             * READ A RECORD FROM SYSIN
         AHI   R11,1                   * INCREMENT # OF SEARCH STRINGS
         CHI   R11,250                 * # OF SEARCH STRINGS > 250
         JH    ERROR2                  * BRANCH IF > 250
         SR    R0,R0                   * CLEAR R0 FOR IC INSTRUCTION
         IC    R0,DELIMIT              * R0 IS SEARCH STRING
         LA    R4,INBUF                * R4 -> STRING ADDRESS
         LA    R5,41                   * R5 -> STRING LENGTH
         LA    R3,0(R4,R5)             * R3 -> END OF STRING
LOOP     SRST  R3,R4                   * SEARCH DELIMETER
         JC    1,LOOP                  * LOOP UNTIL DELIMERER IS FOUND
         JC    2,ERROR1                * DISPLAY ERROR MSG IF NOT FOUND
         SR    R3,R4                   * CALC LENGTH OF THE PARAMETER
         AHI   R3,-1                   * SUBT 1 FOR EXECUTE MVC INST
         EX    R3,MVCPARM              * MVC  1(0,R7),INBUF
         STC   R3,0(R7)                * SAVE LENGTH OF SEARCH STRING
         AHI   R7,41                   * POINT TO NEXT SEARCH STRING
         J     READPRM                 * READ NEXT RECORD
EOP      CLOSE SYSIN                   * CLOSE SYSIN
         LTR   R11,R11                 * SAVE NUMBER OF SEARCH PARMS
         JZ    ERROR3                  * BRANCH IF NO INPUT DATA
         STH   R11,ENTRY#              * SAVE NUMBER OF SEARCH PARMS
         PUT   PRINT,TITLE1            * PRINT TITLE LINE
         PUT   PRINT,BLANKS            * PRINT BLANK LINE
*
MAIN000  DS    0H                      * LOAD RECORD LENGTH
         LHI   R7,200                  * MAXIMUM 60 LINES
         L     R9,LOGTBL               * ADDRESS OF LOG RECORD TABLE
         CLI   SWITCH,C'Y'             *
         JE    READ200                 *
         MVC   0(135,R9),RECORDS       * MOVE LAST LOGREC TO
         AHI   R9,135                  * 1ST ENTRY OF LOGREC TABLE
READ100  MVC   RECORDS,BLANKS          * CLEAR RECORD
         GET   SYSLOG,RECORDS          * GET SYSLOG RECORD
READ200  MVC   0(135,R9),RECORDS       *
         MVI   SWITCH,C'N'             * OFF FIRST SWITCH
         CLI   RECORD,C'N'             * NORMAL LINE ?
         JE    ENDMULT                 * BRANCH IF YES
         CLI   RECORD,C'M'             * MULTIPLE LINE HEADER ?
         JE    ENDMULT                 * BRANCH IF MULTIPLE RECORD
         AHI   R9,135                  *
         JCT   R7,READ100              *
         MVC   RECORDS(136),BLANKS     *
         PUT   PRINT,RECORDS           *
         LHI   R0,L'EMSG4              *
         AHI   R0,8                    *
         STH   R0,RECORDS              * SAVE RECORD LENGTH
         MVC   RECORDS+8(L'EMSG4),EMSG4 * WRITE ERROR MESSAGE EMSG4
         PUT   PRINT,RECORDS           *
         LHI   R15,4                   * SET RETURN CODE TO 4
         STH   R15,RETCODE             * SAVE RETURN CODE
* IGNORES MULTIPLE LINES MORE THAN 200
         L     R9,LOGTBL
         PUT   PRINT,0(R9)             * WRITE CURRENT RECORD
         MVC   RECORDS(136),BLANKS     *
         PUT   PRINT,RECORDS           * WRITE A BLANK LINE
READ400  MVC   RECORDS,BLANKS          * CLEAR RECORD
         GET   SYSLOG,RECORDS          * GET SYSLOG RECORD
         CLI   RECORDI+1,C'N'          * NORMAL LINE ?
         JE    ENDMULT                 * BRANCH IF YES
         CLI   RECORDI+1,C'M'          * MULTIPLE LINE HEADER ?
         JNE   READ400                 * BRANCH IF MULTIPLE RECORD
ENDMULT  STH   R7,LINECT               * NEW MESSAGE LINE
         LHI   R4,201                  *
         SH    R4,LINECT               * # OF MULTIPLE LINES
         STH   R4,LINECT               * NUMBER OF RECORDS
         L     R9,LOGTBL               * ADDRESS OF LOG RECORD TABLE
SRCH20   LH    R11,ENTRY#              * NUMBER OF SEARCH PARMS
         L     R7,SRCHTBL              * ADDRESS OF SEARCH STRING TABLE
         LH    R6,RECLEN               * LOAD RECORD LENGTH
         CHI   R6,62                   * SHORT RECORD ??
         JL    SRCH70                  * BRANCH IF SHORT RECORD
         AHI   R6,-44                  *
         LR    R8,R6                   * SAVE R6 TO R8
SRCH30   LA    R5,RECORD+57            * R5 -> RECORD
         SR    R10,R10                 * CLEAR R10 FOR IC INSTR
         IC    R10,0(R7)               * GET LENGTH OF SEARCH PARM
         LR    R6,R8                   * RESTORE R6
SRCH50   EX    R10,COMPARM             * CLC  1(0,R7),0(R5)
         JE    PUTLOG                  * EQ THEN WRITE THE RECORD
         LA    R5,1(R5)                * INCR. POSITION IN LOG RECORD
         JCT   R6,SRCH50               * SEARCH CHARACTER BY CHARACTER
         AHI   R7,41                   * NEXT SEARCH STRING
         JCT   R11,SRCH30              * SEARCH
SRCH70   AHI   R9,135                  * POINT TO NEXT LOGREC
         JCT   R4,SRCH20               * PROCESS NEXT LOGREC
         J     MAIN000                 * CONTINUE
PUTLOG   LH    R4,LINECT               * WRITE SYSLOG
         L     R9,LOGTBL               * ADDRESS OF LOG RECORD TABLE
PUTLOG2  PUT   PRINT,0(R9)             * WRITE CURRENT RECORD
         AHI   R9,135                  * POINT TO NEXT LOGREC
         JCT   R4,PUTLOG2              * PROCESS NEXT LOGREC
         MVI   EMPTY,C'N'              * SET SWITCH TO NOT EMPTY
         J     MAIN000                 * CONTINUE
ABEND    DC    X'0000'
*---------------------------------------------------------------------*
* ERROR MESSAGES                                                      *
*---------------------------------------------------------------------*
ERROR1   PUT   PRINT,TITLE1            * WRITE TITLE
         MVC   RECORDS(136),BLANKS     *
         PUT   PRINT,RECORDS           * WRITE A BLANK LINE
         LHI   R0,L'EMSG1              *
         AHI   R0,8                    *
         STH   R0,RECORDS              * SAVE RECORD LENGTH
         MVC   RECORDS+8(L'EMSG1),EMSG1 *
         PUT   PRINT,RECORDS           * WRITE ERROR MESSAGE EMSG1
         MVC   RECORDS(136),BLANKS     *
         PUT   PRINT,RECORDS           *
         MVC   RECORDS+5(L'INBUF),INBUF  *
         PUT   PRINT,RECORDS           * PRINT ERROR PARAMETER
         J     CC8                     * SET RETURN CODE 8 AND ABORT
ERROR2   PUT   PRINT,TITLE1            * WRITE TITLE
         MVC   RECORDS(136),BLANKS     *
         PUT   PRINT,RECORDS           * WRITE A BLANK LINE
         LHI   R0,L'EMSG2              *
         AHI   R0,8                    *
         STH   R0,RECORDS              * SAVE RECORD LENGTH
         MVC   RECORDS+8(L'EMSG2),EMSG2 *
         PUT   PRINT,RECORDS           *
         J     CC8                     * SET RETURN CODE 8 AND ABORT
ERROR3   PUT   PRINT,TITLE1            * WRITE TITLE
         MVC   RECORDS(136),BLANKS     *
         PUT   PRINT,RECORDS           * WRITE A BLANK LINE
         LHI   R0,L'EMSG3              *
         AHI   R0,8                    *
         STH   R0,RECORDS              * SAVE RECORD LENGTH
         MVC   RECORDS+8(L'EMSG3),EMSG3 * WRITE ERROR MESSAGE EMSG3
         PUT   PRINT,RECORDS           *
CC8      LHI   R15,8                   * SET RETURN CODE TO 8
         STH   R15,RETCODE             * SAVE RETURN CODE
         J     CLOSEFL                 * ABORT
*---------------------------------------------------------------------*
* END ROUTINES                                                        *
*---------------------------------------------------------------------*
EOF      CLI   EMPTY,C'N'              * STRING NOT FIND
         JE    CLOSEFL                 * BRANCH IF YES
         PUT   PRINT,BLANKS            *
         PUT   PRINT,BLANKS            *
         PUT   PRINT,NFIND             * DISPLAY STRING NOT FOUND
         LHI   R15,4                   * SET RETURN CODE TO 4
         STH   R15,RETCODE             * SAVE RETURN CODE
CLOSEFL  CLOSE (PRINT,,SYSLOG)         * CLOSE SYSLOG
         STORAGE RELEASE,LENGTH=37520,ADDR=SRCHTBL
         LH    R15,RETCODE             * RESTORE RETURN CODE
EXIT     PR                            * RETURN TO ZOS
MVCPARM  MVC   1(0,R7),INBUF           * MOVE PARM FROM INBUF
COMPARM  CLC   1(0,R7),0(R5)           * COMPARE NAME TO RECORD ?
*
*---------------------------------------------------------------------*
* CONSTANTS AND STORAGE AREAS                                         *
*---------------------------------------------------------------------*
EMSG1    DC    C'ERROR - SEARCH STRING LENGTH > 40 OR NO DELIMITER'
EMSG2    DC    C'ERROR - NUMBER OF SEARCH STRINGS > 250'
EMSG3    DC    C'ERROR - NO SEARCH PARAMETER'
EMSG4    DC    C'SKIP SEARCHING THE FOLLOWING LINE ( > 200)'
DELIMIT  DC    C'#'                    * DEFAULT DELIMITER
*
SRCHTBL  DC    A(0)                    * ADDRESS OF SEARCH STRING TABLE
LOGTBL   DC    A(0)                    * ADDRESS OF LOGREC TABLE
ENTRY#   DC    H'0'                    * NUMBER OF SEARCH PARAMETERS
LINECT   DC    H'0'                    * NUMBER OF MULTIPLE LINES
RETCODE  DC    H'0'                    * RETURN CODE
EMPTY    DC    C'Y'                    *
SWITCH   DC    C'Y'                    * FIRST TIME SWITCH
*
*   STORAGE DEFINING INPUT RECORD FROM SYSLOG DATASET
*
INBUF    DS    CL80                  * SYSIN RECORD
RECORDS  DC    H'135'                * RECORD LENGTH
         DC    H'00'
RECORDI  DC    CL131' '              * SYSLOG RECORD
*
TITLE1   DC    H'122'
         DC    H'0'
         DC    CL16' '
         DC    CL40'*--------------------------------------*'
         DC    CL22'   SEARCH SYSLOG      '
         DC    CL40'*--------------------------------------*'
NFIND    DC    H'47'
         DC    H'0'
         DC    CL22' '
         DC    CL21'STRING NOT FOUND !!! '
BLANKS   DC    H'135',H'0',CL131' '
*
*---------------------------------------------------------------------*
* DCB'S                                                               *
*---------------------------------------------------------------------*
*
*    INPUT SYSLOG
*
SYSLOG   DCB   DDNAME=SYSLOG,                                          C
               MACRF=GM,                                               C
               DSORG=PS,                                               C
               RECFM=VBA,                                              C
               LRECL=135,                                              C
               EODAD=EOF
*
*    INPUT SYSIN
*
SYSIN    DCB   DDNAME=SYSIN,                                           C
               MACRF=GM,                                               C
               DSORG=PS,                                               C
               RECFM=FB,                                               C
               LRECL=80,                                               C
               EODAD=EOP
*
*   OUTPUT FILES
*
PRINT    DCB   DDNAME=PRTFILE,                                         C
               MACRF=PM,                                               C
               DSORG=PS,                                               C
               RECFM=VBA,                                              C
               LRECL=135
LOGREC   DSECT
         DS    0CL135                * SYSLOG RECORD
RECLEN   DS    CL2                   * 2 BYTES RECORD LENGTH
         DS    CL2                   * 2 BYTES BLOCK LENGTH
         DS    CL1                   * ATTRIBUTE
RECORD   DS    CL131                 * FILLER
         LTORG
         END
