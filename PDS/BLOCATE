***********************************************************************
*
*        BLOCATE IS A BATCH PROGRAM USED TO LOCATE A NAMED MODULE IN
*        JPA, JOBLIB, STEPLIB, LPA LIBRARIES, SYSLIB (OPTIONAL) AND
*        DYNAMIC LINKLIST.
*
*        BLDL SEARCH SEQUENCE
*               - JOBLIB
*               - STEPLIB
*               - SYSLIB  (OPTIONAL)
*        LPA SEARCH SEQUENCE
*               - FLPA
*               - PLPA
*               - LPALIB (IF IT IS LPA MODULE)
*        LINKLIST
*        NUCLEUS
*
*   ENHANCEMENT:
*  @01   IF THE LOCATED MODULE IS IN LPA, DISPLAY THE SOURCE LPA
*        LIBRARY. USE SWAREQ TO RETRIEVE SWA TO SUPPORT SWA ABOVE
*        16MB.
*                                         ALBERT CHENG 12 NOV 2014
*  @02   DEFINE RACF FACILITY PROFILE CSVDYNL.*.TEST
*        USER MUST HAVE READ ACCESS TO THE ABOVE RACF PROFILE
*        LINK-EDIT BLOCATE WITH AC=0.
*                                         ALBERT CHENG 24 NOV 2014
***********************************************************************
BLOCATE  CSECT
BLOCATE  AMODE 24
BLOCATE  RMODE 24
         BAKR  R14,0                   SAVE REGISTER INTO LINKAGE STACK
         LR    R12,R15
         USING BLOCATE,R12             ESTABLISH ADDRESSIBILITY
         L     R10,0(R1)               GET PARM FIELD ADDRESS
         SR    R3,R3                   CLEAR WORK REG
         ICM   R3,3,0(R10)             PICK UP PARM LENGTH
         JZ    ERROR                   NO PARM INFO ENTERED
         BCTR  R3,R0               DECREMENT R3 FOR EXEC
         EX    R3,MOVENAME         MOVE TO LIST FOR LOAD
         MVC   BLDLNAME(8),NAME    MOVE NAME TO BLDL LIST
         MVC   MSG2NAME(8),NAME    MOVE NAME TO MSG2
         OPEN  (PRINT,(OUTPUT))
         LTR   R15,R15
         JNZ   ERROR3
         L     R3,X'21C'      LOAD CURRENT TCB
         USING TCB,R3
         L     R3,TCBJSTCB
TCBLOOP  SR    R15,R15
         ICM   R15,7,TCBJPQB  LOAD JOB PACK QUEUE
         USING CDENTRY,R15
         JZ    NEXTTCB        NO, SEARCH THE MLPA/FLPA
         J     FIRSTJPA
NEXTJPA  L     R15,CDCHAIN    1ST CDE ON THE QUEUE
         LTR   R15,R15        ANYTHING ON THE QUEUE?
         JZ    NEXTTCB        NO, SEARCH THE MLPA/FLPA
FIRSTJPA CLC   NAME,CDNAME    NAMES EQUAL?
         JNE   NEXTJPA        YES, FOUND
         XC    RETCODE,RETCODE INDICATE MODULE FOUND
         TM    CDATTR,CDMIN   MINOR CDE?
         JZ    CDEMAJ1        NO, CONTINUE
         MVC   JPATRUE,CDNAME COPY TRUE NAME
         L     R15,CDXLMJP    LOCATE MAJOR CDE
CDEMAJ1  DS    0H
         MVC   JPANAME,CDNAME COPY MODULE NAME
         UNPK  JPAADR(9),CDENTPT(5)   UNPACK ADDRESS FOR PRINT
         TR    JPAADR(8),TRTABLE-240  MAKE PRINTABLE
         MVI   JPAADR+8,C' '          CLEAR GARBAGE FROM UNPACK
         UNPK  JPAUSE(5),CDUSE(3)     UNPACK ADDRESS FOR PRINT
         TR    JPAUSE(4),TRTABLE-240  MAKE PRINTABLE
         MVI   JPAUSE+5,C' '          CLEAR GARBAGE FROM UNPACK
         CLI   JPATRUE,C' '   ALIAS NAME EXIST ??
         JNE   CDEMIN1        BRANCH IF YES
         MVC   TEXT+0(L'MSG5),MSG5    DISPLAY MAJOR NAME
         PUT   PRINT,TEXT
         J     LPAQ           SCAN LPA
CDEMIN1  MVC   TEXT+0(LMSG5A),MSG5   DISPLAY MAJOR AND MINOR NAME
         PUT   PRINT,TEXT
NEXTTCB  ICM   R3,15,TCBNTC
         JNZ   TCBLOOP
         DROP  R15
LPAQ     L     R3,16          GET CVT ADDR
         L     R15,CVTQLPAQ-CVT(,R3)   ACTIVE LPA QUEUE ADDRESS
         USING CDENTRY,R15
         LTR   R15,R15        ANYTHING ON THE QUEUE?
         JZ    DIRSRCH        NO, SEARCH THE LPA DIRECTORY
         J     FIRSTLPA
CDELOOP2 DS    0H
         LTR   R15,R15        ANYTHING ON THE QUEUE?
         JZ    DIRSRCH        NO, SEARCH THE LPA DIRECTORY
         CLC   NAME,CDNAME    NAMES EQUAL?
         JE    CDECHK2        YES, FOUND
FIRSTLPA L     R15,CDCHAIN    1ST CDE ON THE QUEUE
         J     CDELOOP2
CDECHK2  XC    RETCODE,RETCODE  INDICATE MODULE FOUND
         TM    CDATTR,CDMIN     MINOR CDE?
         JZ    CDEMAJ2          NO, CONTINUE
         MVC   FLPATRUE,CDNAME  COPY TRUE NAME
         L     R15,CDXLMJP      LOCATE MAJOR CDE
CDEMAJ2  DS    0H
         MVC   FLPANAME,CDNAME  COPY MODULE NAME
         UNPK  FLPAADR(9),CDENTPT(5)   UNPACK ADDRESS FOR PRINT
         TR    FLPAADR(8),TRTABLE-240  MAKE PRINTABLE
         MVI   FLPAADR+8,C' '          CLEAR GARBAGE FROM UNPACK
         CLI   FLPATRUE,C' '  ALIAS NAME EXIST ??
         JNE   CDEMIN2        BRANCH IF YES
         MVC   TEXT+0(LMSG4),MSG4  DISPLAY MAJOR NAME
         PUT   PRINT,TEXT
         J     DIRSRCH        SCAN LPA
CDEMIN2  MVC   TEXT+0(LMSG4A),MSG4  DISPLAY MAJOR AND MINOR NAME
         PUT   PRINT,TEXT
         DROP  R15
DIRSRCH  LM    R0,R1,NAME     PICK UP THE NAME
         L     R6,CVTLPDSR-CVT(,R3)     LPA SEARCH ROUTINE ADDR
         DS    0Y(R8,R9)      ROUTINES USES THESE REGISTERS
SRCHLPA  BALR  R14,R6         SEARCH LPA DIRECTORY
         J     GOTIT          IT'S THERE
         J     NOTLPA         BRANCH IF NOT THERE
GOTIT    XC    RETCODE,RETCODE INDICATE MODULE FOUND
         LR    R4,R0          PUT LPDE ADDR WHERE IT CAN DO SOME GOOD
         USING LPDE,R4        INFORM THE ASSEMBLER
         TM    LPDEATTR,LPDEMIN        MINOR LPDE?
         JZ    LPTRUE                  NO, PROCESS MAJOR
         MVC   TRUENM,LPDEMJNM         YES, COPY TRUE NAME
         LM    R0,R1,LPDEMJNM          PUT IT IN REGS
         J     SRCHLPA                 GET MAJOR LPDE
LPTRUE   UNPK  LENGTH(7),LPDEXTLN+1(4) UNPACK LENGTH FOR PRINT
         TR    LENGTH(6),TRTABLE-240   MAKE PRINTABLE
         MVI   LENGTH+6,C' '           CLEAR GARBAGE FROM UNPACK
         UNPK  ADDRESS(9),LPDEXTAD(5)  UNPACK ADDRESS FOR PRINT
         TR    ADDRESS(8),TRTABLE-240  MAKE PRINTABLE
         MVI   ADDRESS+8,C' '          CLEAR GARBAGE FROM UNPACK
         DROP  R4
LPAMSG   CLI   TRUENM,C' '    IS THIS AN ALIAS?
         JNE   TPUTA          YES, ISSUE ALIAS TPUT
         MVC   TEXT+0(LMSG1),MSG1 MESSAGE WITHOUT ALIAS NAME
         PUT   PRINT,TEXT
*        J     NOTLPA         SEE IF IN LNKLST ALSO                @01D
         J     GETLPADS                                            @01A
TPUTA    MVC   TEXT+0(LMSG1A),MSG1  MESSAGE WITH ALIAS NAME
         PUT   PRINT,TEXT
GETLPADS OPEN  (LPALIB,(INPUT))                                    @01A
         LTR   R15,R15                                             @01A
         JNZ   NOTLPA         BRANCH IF OPEN ERROR                 @01A
         BLDL  LPALIB,LIST    LOCATE MODULE IN LPALIB LIBRARIES    @01A
         LTR   R15,R15        CHECK RETURN CODE                    @01A
         JNZ   NOTLPA         NOT FOUND IN LPALIB LIBRARY          @01A
         SR    R2,R2          CLEAR FOR IC                         @01A
         IC    R2,BLDLK       PICK UP CONCATINATION NUMBER         @01A
         MHI   R2,20          CONCATINATION DSNAME OFFSET IN TIOT  @01A
         EXTRACT TIOTADR,FIELDS=(TIOT)  EXTRACT THE ADDRESS OF TIOT@01A
         L     R1,TIOTADR                                          @01A
         AHI   R1,24              LOCATE THE FIRST TIOT ENTRIES    @01A
NEXTIOT  CLC   4(6,R1),MSG6       DDNAME = LPALIB ??               @01A
         JE    GETDSN                                              @01A
         AHI   R1,20              ADD LENGTH OF TIOT ENTRY         @01A
         J     NEXTIOT                                             @01A
GETDSN   AR    R2,R1              LOCATE CORRECT DSN TIOT ENTRIES  @01A
         MVC   SW_EPA+4(4),12(R2)    GET JFCB TOKEN                @01A
         L     R4,SWAPAPTR                                         @01A
         USING ZB505,R4           ESTABLISH ADDRESSABILITY TO EPA  @01A
         SAM31                         SWITCH TO 31 BIT ADDRESS    @01A
*  USE SWAREQ TO CONVERT SWA TOKEN INTO REAL ADDRESS               @01A
         SWAREQ FCODE=RL,EPA=SWAPAPTR,UNAUTH=YES,MF=(E,SWAPARMS)   @01A
         LTR   R15,R15                                             @01A
         JNZ   CLSLPA                                              @01A
         L     R4,SW_EPA               POINTS TO JFCB              @01A
         MVC   LPADSN,JFCBDSNM-JFCB(R4)                            @01A
         SAM24                         SWITCH TO 24 BIT ADDRESS    @01A
         MVI   TEXT,C' '                                           @01A
         MVC   TEXT+1(L'TEXT-1),TEXT                               @01A
         MVC   TEXT+0(LMSG6A),MSG6                                 @01A
         PUT   PRINT,TEXT                                          @01A
CLSLPA   CLOSE LPALIB                                              @01A
NOTLPA   DS    0H
         RDJFCB (SYSLIB)                                           @01A
         LTR   R15,R15                                             @01A
         JNZ   DYNAMIC                                             @01A
         OPEN  (SYSLIB,(INPUT))
         LTR   R15,R15
         JNZ   ERROR2
         BLDL  SYSLIB,LIST    LOCATE MODULE IN SYSLIB
         LTR   R15,R15        CHECK RETURN CODE
         JNZ   DYNAMIC        NOT FOUND IN SYSLIB
         SR    R1,R1          CLEAR FOR IC
         IC    R1,BLDLK       PICK UP CONCATINATION NUMBER
         XC    RETCODE,RETCODE INDICATE MODULE FOUND
         TM    BLDLC,X'80'    IS THIS AN ALIAS?
         JZ    NOTALIAS       NO, MAJOR NAME
         MVC   MODTYPE(5),=C'MINOR'   INDICATE MODULE IS ALIAS
NOTALIAS CLI   BLDLZ,X'00'    PRIVATE LIBRARY?
         JE    CONCAT         YES, ALL SET
         MVC   LIBTYPE(12),=C'JOB/STEP LIB' MODIFY MESSAGE TEXT
         CLI   BLDLZ,X'01'    LINKLIB/LINK LIST LIBRARY?
         JH    CONCAT         NO, ALL SET
DYNAMIC  DS    0H             HANDLE DYNAMIC LINKLIST
         MVC   LIBTYPE(12),=C'DYNAM LNKLST'   MODIFY MESSAGE TEXT
*        MODESET MODE=SUP,KEY=ZERO                                 @02D
         CSVDYNL REQUEST=TEST,LNKLSTNAME=LSTNAME,MODNAME=BLDLNAME,     X
               RETCODE=CSVRET,RSNCODE=CSVRSN,FOUNDDSNAME=DSN
*        MODESET MODE=PROB,KEY=NZERO                               @02D
         LTR   R15,R15
         JNZ   NOTLINK
         J     DISPLAY
CONCAT   XC    DBLWD,DBLWD    CLEAR FOR CONVERT
         CVD   R1,DBLWD       CONVERT TO DECIMAL
         MVI   DSN,C'('       ADD LEADING PAREN
         UNPK  DSN+1(2),DBLWD+6(2) UNPACK FOR PRINT
         OI    DSN+2,X'F0'    MAKE PRINTABLE
         MVI   DSN+3,C')'     ADD TRAILING PAREN
DISPLAY  MVC   TEXT+0(LMSG2),MSG2
         CLI   DSN,C' '
         JE    NOTLINK
         PUT   PRINT,TEXT
         J     CLOSEF
EXIT     OC    RETCODE,RETCODE ANY MESSAGE ISSUED (MODULE FOUND) ?
         JZ    RETURN         YES, ALL DONE
         MVC   TEXT+0(LMSG0),MSG0      INFORM USER
         PUT   PRINT,TEXT
CLOSEF   DS    0H
         LA    R15,SYSLIB
         TM    DCBOFLGS-IHADCB(R15),DCBOFOPN     IS SYSLIB OPENED? @01A
         JNO   CLOSE2                            SKIP IF NOT OPEN  @01A
         CLOSE SYSLIB                                              @01A
CLOSE2   CLOSE PRINT                                               @01C
RETURN   DS    0H
         L     R15,RETCODE    SET RETURN CODE
         PR
NOTLINK  DS    0H
         LA    R1,BLDLNAME
         NUCLKUP NAME=(1),ADDR=(3)   INVOKE NUCLEUS MAP LOOKUP SRV
         LTR   R15,R15
         JNZ   EXIT
         ST    R3,DBLWD
         UNPK  NADDRESS(9),DBLWD(5)   UNPACK ADDRESS FOR PRINT
         TR    NADDRESS(8),TRTABLE-240 MAKE PRINTABLE
         MVI   NADDRESS+8,C' ' CLEAR GARBAGE FROM UNPACK
         MVC   MSG3NAME,BLDLNAME
         MVC   TEXT+0(LMSG3),MSG3          DISPLAY NUCLUES MODULE
         PUT   PRINT,TEXT
         J     CLOSEF
MOVENAME MVC   NAME(0),2(R10) MOVE NAME FOR LOAD
ERROR    DS    0H
         WTO   'NO INPUT PARAMETER'
         J     RETURN
ERROR2   DS    0H
         WTO   'SYSLIB FILE OPEN ERROR'
         J     RETURN
ERROR3   DS    0H
         WTO   'SYSPRINT FILE OPEN ERROR'
         J     RETURN
*-------------------------------------------------------------------
LIST     DC    H'1',H'14'     BLDLLIST
BLDLNAME DC    CL8' '         BLDL NAME OF MODULE
BLDLTTR  DC    XL3'00'        TTR OF MODULE
BLDLK    DC    X'00'          CONCATINATION NUMBER
BLDLZ    DC    X'00'          LOCATION
BLDLC    DC    X'00'          ENTRY TYPE
*-------------------------------------------------------------------
MSG0     DS    0F
         DC    C'REQUESTED MODULE NOT FOUND IN EITHER LPA, '
         DC    C'LNKLST, NUCLEUS OR JOB/TASK/STEPLIB'
LMSG0    EQU   *-MSG0                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG1     DS    0F
         DC    C'PLPA MODULE   '
NAME     DC    CL8' '
         DC    C' IS: '
LENGTH   DC    CL6' '
         DC    C' BYTES AT '
ADDRESS  DC    CL8' '                MVS/XA
LMSG1    EQU   *-MSG1                SIZE OF MESSAGE
         DC    C' (ALIAS OF '
TRUENM   DC    CL8' ',C')'         TRUE NAME IF GIVEN NAME IS AN ALIAS
LMSG1A   EQU   *-MSG1                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG2     EQU   *
MSG2NAME DC    CL8' '
         DC    C' FOUND AS A '
MODTYPE  DC    C'MAJOR'
         DC    C' NAME IN '
LIBTYPE  DC    C'PRIVATE LIB  '
DSN      DC    CL36' '
LMSG2    EQU   *-MSG2         SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG3     DS    0F
         DC    C'NUCLEUS MODULE : '
MSG3NAME DC    CL8' '
         DC    C' BYTES AT '
NADDRESS DC    CL9' '                NUCLEUS ADDRESS
LMSG3    EQU   *-MSG3                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG4     DS    0F
         DC    C'F/MLPA MODULE '
FLPANAME DC    CL8' '
         DC    C' AT '
FLPAADR  DC    CL8' '                FLPA ADDRESS
LMSG4    EQU   *-MSG4                SIZE OF MESSAGE
         DC    C' (ALIAS OF '
FLPATRUE DC    CL8' ',C')'         TRUE NAME IF GIVEN NAME IS AN ALIAS
LMSG4A   EQU   *-MSG4                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG5     DS    0F
         DC    C'JPA MODULE '
JPANAME  DC    CL8' '
         DC    C' AT '
JPAADR   DC    CL8' '                JPA ADDRESS
         DC    CL14' IN USE COUNT '
JPAUSE   DC    CL4' '
LMSG5    EQU   *-MSG5                SIZE OF MESSAGE
         DC    C' (ALIAS OF '
JPATRUE  DC    CL8' ',C')'         TRUE NAME IF GIVEN NAME IS AN ALIAS
LMSG5A   EQU   *-MSG5                SIZE OF MESSAGE
*-------------------------------------------------------------------
MSG6     DS    0F                                                  @01A
         DC    C'LPALIB MODULE RESIDES  IN '                       @01A
LPADSN   DC    CL44' '                                             @01A
LMSG6A   EQU   *-MSG6                SIZE OF MESSAGE               @01A
*-------------------------------------------------------------------
TIOTADR  DS    A                                                   @01A
SWAPAPTR DC    A(SW_EPA)                                           @01A
SW_EPA   DC    XL28'00'                                            @01A
SWAPARMS SWAREQ MF=L,UNAUTH=YES                                    @01A
TEXT     DS    CL79
CSVRET   DC    F'0'
CSVRSN   DC    F'0'
TRTABLE  DC    C'0123456789ABCDEF' TRANSLATE TABLE
LSTNAME  DC    CL16'CURRENT'
BLANKS   DC    CL81' '        BLANKS
DBLWD    DC    D'0'           WORKAREA
ADDR     DC    F'0'           ADDRESS WORK AREA
ECB      DC    F'0'           DUMB ECB FOR PARSE
RETCODE  DC    F'4'           RETURN CODE (AND MSG SWITCH)
*
*   INPUT FILES
*
LPALIB   DCB   DDNAME=LPALIB,MACRF=R,DSORG=PO,EODAD=EXIT           @01A
SYSLIB   DCB   DDNAME=SYSLIB,MACRF=R,DSORG=PO,EODAD=EXIT,EXLST=JFCBADR
JFCBADR  DS    0F
         DC    X'87'
         DC    AL3(JFCB)
JFCB     DS    0C
         IEFJFCBN                     JFCB MAPPING
*
*   OUTPUT FILES
*
PRINT    DCB   DDNAME=SYSPRINT,                                        X
               MACRF=PM,                                               X
               DSORG=PS,                                               X
               RECFM=F,                                                X
               LRECL=79
         IKJTCB
         IHALPDE
         IHACDE
         IEFJESCT
*        IEFZB505
         IEFZB505 LOCEPAX=YES
         DCBD  DSORG=PO
         CVT DSECT=YES,LIST=NO
         YREGS
         END
