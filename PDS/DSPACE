DSPACE   TITLE 'TSO CP TO PRINT DASD SPACE INFO  19AUG24 A CHENG'
********************************************************************
*                      D-S-P-A-C-E
*      PROGRAM TO PRINTOUT AVAILABLE SPACE ON A INDEXD VTOC DRIVE
*      USES PUTLINE FUNCTION TO DISPLAY INFORMATION ON TERMINAL
*      (NOTE: SVC 78 ONLY WORKS FOR INDEXED VTOC)
*
*      W F HARTMAN MAY 1981
*            CODE FROM CBTV224   - CLARK
*      RE-WORKED:
*        RENT; %FREE SPACE; UNIT NAME; NO. USERS;ALT PATH, PATH MASK
*        ADDED XA SUPPORT                                      DDMMM84
*        SUPPORT 3380 MODEL-K (TRIPLE DENSITY)       AC
*        REPLACE TPUT MACRO BY PUTLINE MACRO         PS        12DEC90
* @01    SUPPORT 3390 MODEL 2                        AC        03DEC91
* @02    SUPPORT 3390 MODEL 3                        AC        23APR96
* @03    SUPPORT 4 DIGITS UNIT NUMBER                AC        23MAY01
* @04    1) DISPLAY 3390 MODEL NUMBER                AC        16MAY12
*        2) ADD ALIAS M01/M02/M03/M09/M27/M54
*           SYNATX : DSPACE      (DISPLAY ALL MODEL)
*           SYNATX : M09 SYS*    (SELECT 3390-MOD9 AND VOL SYS*)
*        3) REMOVE DASD 3380 AS IT IS NO LONGER AVAILABLE
*        4) REMOVE MACRO @ENT AND @RET
*        5) SUPPORT 3390 MOD9/27/54
* @05    SUPPORT WILDCARD                                  AC  20NOV14
*        DSPACE TS*
*        DSPACE TS?1*
* @06    ADD ALIAS EMPTYDSK TO DISPLAY VOLUME LIST WITH ZERO
*        UTILIZATION.                                      AC  19APR18
* @07    MOD54 ENHANCEMENT
*                                                          AC  08FEB23
* @08    ADD ALIAS VOLS TO DISPLAY VOLUME SERIAL AND UNIT ADDRESS
*        (USAGE: BEFORE IPL RUN VOLS TO DISPLAY ALL THE ONLINE
*                DASDS BEFORE IPL. AFTER IPL RUN VOLS TO DISPLAY
*                ALL THE ONLINE DASDS AFTER IPL. COMPARE ALL THE
*                ONLINE DASD LIST BEFORE AND AFTER IPL. TAKE
*                ACTION IF THE COMPARE RESULT IS NOT IDENTICAL.
*                                                          AC  19AUG24
*
********************************************************************
         PUNCH ' ALIAS M01'                                      @04A
         PUNCH ' ALIAS M02'                                      @04A
         PUNCH ' ALIAS M03'                                      @04A
         PUNCH ' ALIAS M09'                                      @04A
         PUNCH ' ALIAS M27'                                      @04A
         PUNCH ' ALIAS EMPTYDSK'                                 @06A
         PUNCH ' ALIAS M54'                                      @07A
         PUNCH ' ALIAS VOLS'                                     @08A
         MACRO
&N       @ED   &OU,&WK
&N       MVC   &OU,OTMASK               MOVE MASK
         L     R0,&WK                   GET DATA
         CVD   R0,WD                    MAKE PACKED
         ED    &OU,WD+4                 EDIT IT
         MEND
*        PRINT NOGEN
*DSPACE  @ENT   R12,(0,DSAEND-DSA,C),DSA=YES                     @04D
DSPACE   CSECT
DSPACE   AMODE 31                                                @05C
DSPACE   RMODE 24                                                @04A
         J     START                                             @08A
         DC    C'DSPACE VER 2.8 '      PROGRAM NAME              @08A
         DC    C'&SYSDATE &SYSTIME'    ASSEMBLE DATE AND TIME    @08A
START    BAKR  R14,0             SAVE RSA INTO LINKAGE STACK     @04A
         LR    R12,R15                                           @04A
         USING DSPACE,R12        ESTABLISH ADDRESSIBILITY        @04A
         XC    WKCLRS(WKCLRL),WKCLRS   CLEAR COUNTERS
*
         LR    R2,R1             SAVE THE ADDRESS OF THE CPPL
         USING CPPL,R2           ADDRESSABILITY FOR THE CPPL
         L     R3,CPPLUPT        PLACE THE ADDRESS OF THE UPT INTO R3
         L     R4,CPPLECT        PLACE THE ADDRESS OF THE ECT INTO R4
         USING ECT,R4              MAP THE ECT                          00142
         DROP  R2
*
*        SET UP PPL FOR PARSE
*
PARMCHK  DS    0H
         LA    R2,PPL                  GET ADDRESS OF PPL
         USING PPL,R2                  TELL ASSEMBLER
         MVC   UPT,4(R1)               COPY  UPT
         MVC   ECTAD,12(R1)            COPY  ECT
         LA    R0,ECB                  GET ADDRESS OF NEW ECB
         ST    R0,ECBP                 SAVE ECB ADDRESS
         XC    ECB,ECB                 ZERO ECB
         MVC   PCL,ADDPCL              GET ADD OF PCL
         LA    R0,ANS                  GET ADD OF ANSWER WORD
         ST    R0,ANSW                 PUT IN PPL
         MVC   COMBUF,0(R1)            PUT ADD OF CBUFF IN PPL
         XC    WK,WK                   ZERO USER WORK AREA
         LA    R1,PPL                  GET ADD OF PPL
         CALLTSSR EP=IKJPARS           GO PARSE IT
         DROP  R2
         LTR   R15,R15                 TEST  RETURN CODE
         JNZ   ERROR                   ERROR GO TELL USER
*
*        DISPLAY THE TITLE DOWN
*
         CLC   ECTPCMD(4),VOLS              DISPLAY VOL ONLY    @08A
         JE    SKIPHDR                                          @08A
         MVC   TEXT+0(HDR1E-HDR1S),HDR1S
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
*
         MVC   TEXT+0(HDR2E-HDR2S),HDR2S
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
SKIPHDR  DS    0H
*
         MVI   UNIT,C' '               UNIT=C' '=NO HITS
*
         L     R6,ANS                  GET ADDRESS OF ANSWER AREA
         USING IKJPARMD,R6                                     25JUN84
*---     ---   PROCESS VOLSERS                                 25JUN84
         LA    R6,VOL                  PDL DSECT ENTRY
         DROP  R6                                              25JUN84
         TM    6(R6),X'80'             IS IT REQUST FOR SPEC VOL
         JO    GETVOL                  YES GO PROCESS
         SR    R6,R6                   NO-ALL VOLUMES
         J     SKPVOL                  SKIP
GETVOL   DS    0H
         MVI   VOLSER,C' '
         MVC   VOLSER+1(5),VOLSER
         L     R7,0(R6)                GET ADDRESS OF VOLUME
         LH    R8,4(R6)                GET LENGTH OF VOLUME
         BCTR  R8,R0                   MACHINE LENGTH
         LA    R9,VOLSER               ADDRESS OF MESSAGE
         EX    R8,EXMVC                MOVE VOLUME IN TO ANS
         XC    USCNWK,USCNWK           CLEAR USCNWK
         MVC   LSPACEL(LSPACESL),LSPACES   SET LSPACE PARAMETER LIST
SKPVOL   DS    0H
         TITLE 'SCAN UCBS'
*
***            THIS CODE COPIED FROM (TSUCBSCN)
*
LOCUCB   DS    0H  -----------------FORMAT IOS SCAN PARM LIST
         XC    DSXAWORK,DSXAWORK       ZERO OUT UCB WORKAREA
         LA    R1,DSXAWORK             ADDR OF UCB WORKAREA
         ST    R1,DSXAWA               STORE IT IN PARM LIST
         LA    R1,DSXACLAS             PTR TO DEV CLAS TO SEARCH
         ST    R1,DSXADEVT             STORE IN PARM LIST
         MVI   DSXACLAS,UCB3DACC       ONLY SEARCH DASD
         LA    R1,DSXAUCBP             AREA TO STORE UCB ADDR
         ST    R1,DSXAUCB              IN PARM LIST
         OI    DSXAUCB,X'80'           SIGNIFY END OF PARMLIST
***>>>>>>       UCB SCAN ROUTINE - COMMON RETURN POINT     <<<<<<  @03A
UCBLOOP  UCBSCAN COPY,                  NOT APF AUTHORIZED             +
               WORKAREA=USCNWK,         100-BYTE WORK AREA/SCAN TOKEN  +
               UCBAREA=USCNUCB,         48-BYTE UCB BASE COPY AREA     +
               DEVNCHAR=UNIT,           4-BYTE DEVICE NUMBER           +
               DCEAREA=DCEAREA,         UCB COMMON SEGMENT             +
               DCELEN=DCELENG,          LENGTH OF DCE                  +
               DYNAMIC=YES,             UCB CLASS EXTENSION AREA       +
               DEVN=0,                  START WITH THE FIRST UCB       +
               RANGE=ALL,               INCLUDE 4-DIGIT NUMBERS        +
               NONBASE=NO,              JUST NEED 1 EXPOSURE PER DISK  +
               DEVCLASS=DASD,           ONLY INTERESTED IN DISKS       +
               MF=(E,USCNPARM)          POINT TO PARAMETER LIST
         LTR   R15,R15                  UCB FOUND?
         JNZ   UCBEND                   NO, END OF SCAN
         LA    R9,USCNUCB               YES, POINT TO UCB COPY
         USING UCB,R9
         TM    SRTESTAT,SRTEONLI       ONLINE OR OFFLINE?
         JNO   UCBSKP                  IGNORE DEVICE IF IT OFFLINE
         LTR   R6,R6                   TEST IF ONLY ONE VOLUME WANTED
         JZ    SNGVOL                  NO, DISPLAY ALL VOLSER
         LH    R0,4(R6)                GET  L'VOLSER
         ST    R0,VOLL                 SAVE L'VOLSER               @05A
         L     R10,0(R6)               GET VOLSER(FAMILY)          @05A
         LA    R15,UCBVOLI             OP2
*----------------------------------------------------------------
*        CALL WILDCARD MATCH SERVICE FOR VOLSER FILTERING          @05A
*----------------------------------------------------------------
         ASAXWC PATTERNSTR=(10),                                       *
               PATTERNSTRLEN=VOLL,                                     *
               STRING=UCBVOLI,                                         *
               STRINGLEN=F0006,                                        *
               ZEROORMORE=WCZ,                                         *
               DELIMITER=BLANK,                                        *
               ONECHAR=WCO
         LTR   R15,R15                 .PATTERN MATCH ?            @05A
         JNZ   UCBSKP                  DO NOT WANT                 @05A
SNGVOL   DS    0H
         TITLE 'PROCESS THIS ONLINE DASD UCB ----------------'
         MVI   OUTMESS,C' '             CLEAR OUTPUT AREA
         MVC   OUTMESS+1(OUTMESSL-1),OUTMESS
         MVC   VOLSER,UCBVOLI          VOLSER
         MVC   OUTMESSV,VOLSER         VOLSER                   @03A
         MVC   OUTMESSU,UNIT           ADDR                     @03A
         CLC   ECTPCMD(4),VOLS         VOLS ONLY                @08A
         JE    SKIPVOLS                                         @08A
*------- ----- LSPACE
         LA    R0,UCBCMSEG             UCB ADR
         PRINT GEN
         LSPACE MF=(E,LSPACEL),DATA=LSPACED,SMF=NONE,UCB=(R0)    @03C
         LTR   R15,R15                  TEST LSPACE RETURN CODE
         JNZ   ERROR2                   BRANCH IF NOT ZERO
         LA    R7,LSPACED               POINT TO LSPACE RETURN AREA
         USING LSPCRET,R7
         L     R2,LSPDFRAG         FORMAT THE FRAGMENTATION     @03A
         CVD   R2,WD                    INDEX                   @03A
         UNPK  WA#FRAG,WD                                       @03A
         OI    WA#FRAG+4,X'F0'                                  @03A
         L     R2,LSPDTCYL              GET NUMBER OF FREE CYLINDERS
         CVD   R2,WD                                            @03A
         UNPK  WA#CYL,WD                                        @03A
         OI    WA#CYL+5,X'F0'                                   @04C
         MVI   WA#CYL+6,C','                                    @04C
         L     R2,LSPDTTRK              GET NUMBER OF FREE TACKS@03A
         CVD   R2,WD                                            @03A
         UNPK  WA#TRK,WD                                        @03A
         OI    WA#TRK+5,X'F0'                                   @04A
         MVI   WA#TRK+6,C','                                    @04C
         L     R2,LSPDNEXT              GET NUMBER OF FREE EXTENTS
         CVD   R2,WD                                            @03A
         UNPK  WA#EXT,WD                                        @03A
         OI    WA#EXT+5,X'F0'                                   @04C
         MVI   WA#EXT+6,C'/'                                    @04C
         L     R2,LSPDLCYL              GET NUMBER OF FREE EXTENTS
         CVD   R2,WD                                            @03A
         UNPK  WA#CCYL,WD                                       @03A
         OI    WA#CCYL+5,X'F0'                                  @04C
         MVI   WA#CCYL+6,C','                                   @04C
         L     R2,LSPDLTRK              GET NUMBER OF FREE EXTENTS
         CVD   R2,WD                                            @03A
         UNPK  WA#CTRK,WD                                       @03A
         OI    WA#CTRK+5,X'F0'                                  @04C
         MVI   WA#CTRK+6,C' '                                   @04C
*------- ----- SEE IF INDEXED VTOC                              @03A
         TM    LSPDSTAT,LSPDIXDS       VTOC INDEX EXISTS?       @03A
         JZ    NONINDEX                BRANCH IF NON-INDEX VTOC @03A
         MVC   INFLAG,=C'E '           VTOC INDEX EXIST BUT INACTIVE
         TM    LSPDSTAT,LSPDIXAC       VTOC INDEX ACTIVE?       @03A
         JZ    NONINDEX                NO                       @03A
         MVC   INFLAG,=C'I '           INDEX VTOC               @03A
*------- ----- GET DEV TYPE INFO
*                                      CALC % FULL
NONINDEX LA    R15,M3390TBL            GET 3390 MODEL TABLE     @04C
         LA    R14,DCEAREA                                      @03C
         USING DCE,R14
         MVC   OUTMESSD,(STCYLNAM-STCYLS)(R15)   DEV. NAME      @04C
NEXTMDL  CLI   0(R15),X'FF'                BRANCH IF END OF     @07C
         JE    ERROR3                      THE DASD MODEL TBL   @04A
         MVC   OUTDENS(3),(STCYMOD-STCYLS)(R15)                 @04A
         CLC   DCEHICYL-3(3),1(R15)        NO OF CYLS MATCH ?   @07C
         JE    CHKMOD                      BRANCH IF MATCH      @04A
         LA    R15,M3390L(R15)             POINT TO NEXT MODEL  @04A
         J     NEXTMDL          SEARCH UNTIL THE MODEL IS FOUND @04A
         DROP  R14
CHKMOD   CLC   ECTPCMD,=CL8'DSPACE'        DISPLAY ALL MODEL ?  @04A
         JE    GETTRKS                                          @04A
         CLC   ECTPCMD,=CL8'EMPTYDSK'      EMPTY DISK ?         @06A
         JE    GETTRKS                                          @06A
         CLC   ECTPCMD(3),(STCYMOD-STCYLS)(R15)  3390 MODEL TYP @04A
         JNE   UCBSKP                IGNORE IF INCORRECT MODEL? @04A
GETTRKS  DS    0H                                               @04A
         L     R14,(STCYLTTK-STCYLS)(R15)       #TRKS/VOL       @04A
         A     R14,WKTOTTTK            TOT TRKS SEEN
         ST    R14,WKTOTTTK
         L     R14,0(R15)                       #CYLS/VOL       @08C
         A     R14,WKTOTCYL            TOT CYLS SEEN
         ST    R14,WKTOTCYL
         L     R0,LSPDTCYL          WKFRECYL = WKFRECYL + LSPDTCYL
         LR    R14,R0
         A     R14,WKFRECYL
         ST    R14,WKFRECYL
*
         MH    R0,(STCYLTRK-STCYLS)(R15)     #TRKS/CYL
         L     R14,LSPDTTRK
         AR    R0,R14                  TOTAL FREE TRKS ON CURR VOL
*
         LR    R14,R0
         A     R14,WKFRETRK            TOT FREE TRKS - ALLVOL
         ST    R14,WKFRETRK
*
         SRDA  R0,32                   SHIFT TO R1
         M     R0,=F'100'              FOR % CALC
*        MHI   R0,100                  FOR % CALC
         AHI   R1,50                   "
         L     R14,(STCYLTTK-STCYLS)(R15)                       @04A
         DR    R0,R14                  CALC % FREE SPACE
         CVD   R1,WD                   ANSWER
         MVC   OUTMESSD(4),=CL4'    '                           @04A
         UNPK  OUTMESSP,WD
         OI    OUTMESSP+L'OUTMESSP-1,C'0' FIX SIGN
*
SKIPVOLS MVC   TEXT+0(OUTMESSL),OUTMESS
         CLC   ECTPCMD,=CL8'EMPTYDSK'  EMPTYDSK ONLY            @06A
         JNE   NONEMPTY                                         @06A
         CLC   OUTMESSP,=CL2'99'                                @06A
         JNE   UCBSKP                                           @06A
         CLC   WA#EXT,CONE             1 EXTENT                 @06A
         JNE   UCBSKP                                           @06A
NONEMPTY PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
UCBSKP   DS    0H
         J     UCBLOOP                 CONTINUE SEARCHING UCB TABLE
UCBEND   DS    0H
         LTR   R6,R6                   IS IT ALL
         JZ    DONE                    YES
         CLC   UNIT,=CL4'    '         WERE ANY VOLSERS FOUND
         JNE   DONE                    YES-NO MSG
         MVI   TEXT,C' '
         MVC   TEXT+1(L'TEXT-1),TEXT
         MVC   OUTMESS(25),NOVOL
         MVC   OUTMESS+7(6),VOLSER
         MVC   TEXT+0(25),OUTMESS
DISPLAY  PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
SECVOL   L     R6,8(R6)
         LA    R6,0(R6)
         LTR   R6,R6                   IS THERE A SECOND VOLUME
         JNZ   GETVOL
DONE     DS    0H
         CLC   ECTPCMD,=CL8'EMPTYDSK'  EMPTYDSK ONLY            @06A
         JE    RC00                                             @06A
         @ED   OTFRECYL,WKFRECYL
         @ED   OTFRETRK,WKFRETRK
         @ED   OTTOTCYL,WKTOTCYL
         @ED   OTTOTTTK,WKTOTTTK
         MVI   TEXT,C' '               CLEAR TEXT LINE
         MVC   TEXT+1(L'TEXT-1),TEXT
         CLC   ECTPCMD(4),VOLS                VOL ONLY          @08A
         JE    RC00                                             @08A
D010     MVC   TEXT+0(HDR3E-HDR3S),HDR3S
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
         MVC   TEXT+0(L'OTTOTS),OTTOTS
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
RC00     PR                                               EXIT     @04C
RC12     MVC   TEXT+0(L'NOVIB),NOVIB
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
         J     UCBSKP
RC16     MVI   TEXT,C' '
         MVC   TEXT+1(L'TEXT-1),TEXT
         MVC   TEXT+0(L'NOTDA),NOTDA
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
         J     UCBSKP
ERROR    MVC   TEXT+0(L'ERRMESS),ERRMESS
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
         J     DONE
ERROR2   MVI   TEXT,C' '                    INIT TEXT TO          @08A
         MVC   TEXT+1(L'TEXT-1),TEXT          SPACE               @08A
         MVC   ERRMESS2(6),VOLSER           COPY VOLSER           @08A
         CHI   R15,8                        LSPACE RC = 8 ?       @08A
         JNE   ERROR2A                      NO, BRANCH            @08A
         MVC   TEXT+0(L'ERRMESS2),ERRMESS2  LSPACE RC = 8         @08A
         J     ERROR2B                                            @08A
ERROR2A  MVC   TEXT+0(20),ERRMESS2                                @08A
ERROR2B  DS    0H                                                 @08A
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
         J     UCBLOOP                                            @08C
ERROR3   MVC   TEXT+0(L'ERRMESS3),ERRMESS3
         PUTLINE    PARM=PUTBLOCK,UPT=(3),ECT=(4),                     X
               ECB=ECBADS,OUTPUT=(TEXTADS,TERM,SINGLE,DATA),           X
               MF=(E,IOPLADS)
         J     DONE
*
*        DATA STORAGE AREA
*
EXMVC    MVC   0(0,9),0(7)
ADDPCL   DC    V(PARSEPCL)
         DC    H'0016'
F0006    DC    F'0006'                 LENGTH                      @05A
VOLL     DS    F                       LENGTH OF THE INPUT VOLSER  @05A
VOLS     DC    C'VOLS'                                             @08A
NOVIB    DC    C'VIB NOT INIT'
NOTDA    DC    C'NOT DASDI   '
WCZ      DC    C'*'                                                @05A
WCO      DC    C'?'                                                @05A
BLANK    DC    C' '                                                @05A
ERRMESS  DC    C'PARSE FAILED'
ERRMESS2 DC    C'       LSPACE FAILED RC=8 NO INDEXED VTOC'        @08C
*                12345678901234567890
ERRMESS3 DC    C'UNKNOWN 3390 MODEL TYPE'
NOVOL    DC    C'VOLUME VVVVVV NOT MOUNTED'
HDR1S    DC    C'SPACE-2.8         FRAG    --  F R E E  --  '
         DC    C' / -- CONTIG --  IX  %               '
HDR1E    EQU   *
HDR2S    DC    C'       MOD UNIT   INDEX #CYL,  #TRK,  #EXT  /'
         DC    C'#CYL,    #TRK VTOC FREE          '
HDR2E    EQU   *
HDR3S    DC    C'  TOTAL CYL  TOTAL TRK   FREE CYL   FREE TRK'
*              C' ZZ,ZZZ,ZZ9 ZZ,ZZZ,ZZ9 ZZ,ZZZ,ZZ9 ZZ,ZZZ,ZZ9'
HDR3E    EQU   *
OTMASK   DC    X'40206B2020206B202120'  Z,ZZZ,ZZ9
*
*   3390 DEVICE CHARACTERISTICS TABLE
*
M3390TBL DS  0H                                                 @04A
*        DC  F'1113',CL4'3390',H'15',AL4(1113*15),C'M01',X'40'  @04C
STCYLS   DS  0H                                                 @04A
STCYLMAX DC  A(1113)             MAX CYLS FOR MOD3              @07C
STCYLNAM DC  CL4'3390'           DISK NAME                      @04A
STCYLTRK DC  H'15'               TRACKS PER CYLINDER            @04A
STCYLTTK DC  A(1113*15)          TRACKS PER VOL                 @04A
STCYMOD  DC  CL4'M01'            3390 MODEL TYPE                @04A
M3390L   EQU *-STCYLS            LENGTH OF THE TABLE ENTRY      @04A
         DC  A(2226),CL4'3390',H'15',A(1113*15*2),C'M02 '       @07C
         DC  A(3339),CL4'3390',H'15',A(1113*15*3),C'M03 '       @07C
         DC  A(10017),CL4'3390',H'15',A(1113*15*9),C'M09 '      @07A
         DC  A(32760),CL4'3390',H'15',A(32760*15),C'M27 '       @07A
         DC  A(65520),CL4'3390',H'15',A(65520*15),C'M54 '       @07A
*        DC  XL4'08B2',CL4'3390',H'15',AL4(1113*15*2),C'M02 '   @07C
*        DC  XL4'0D0B',CL4'3390',H'15',AL4(1113*15*3),C'M03 '   @07C
*        DC  XL4'2721',CL4'3390',H'15',AL4(1113*15*9),C'M09 '   @07C
*        DC  XL4'7FF8',CL4'3390',H'15',AL4(32760*15),C'M27 '    @07C
*        DC  XL4'FFF0',CL4'3390',H'15',AL4(65520*15),C'M54 '    @07C
*  ROOM FOR FUTURE MODEL                                        @04A
*        DC  F'1113',CL4'33A0',H'30',AL4(1113*30),C'M01 '       @07A
         DC  X'FF'             END OF TABLE                     @07C
HEXTR    DC  C'0123456789ABCDEF'
*              0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F  - MASK BITS
LSPACES  LSPACE MF=L                    LSPACE PARAMETER LIST TEMPLATE
LSPACESL EQU   *-LSPACES                LENGTH OF STATIC PARAMETER LIST
PARSEPCL IKJPARM  DSECT=IKJPARMD
VOL      IKJIDENT 'VOLUME',UPPERCASE,MAXLNTH=6,FIRST=ALPHANUM,         X
               OTHER=ANY,LIST                                      @05A
*              OTHER=ALPHANUM,LIST                                 @05D
         IKJENDP
*
*        EQUATES
*
DCELENG  DC    H'32'           SPACE FOR THE EVENT CONTROL BLOCK   @03A
*                              THIS EXPANDS INTO A PUTLINE PARAMETER
TEXTADS  DC    H'83'           LENGTH OF THE OUTPUT LINE
         DC    H'0'            RESERVED
TEXT     DS    CL79
ECBADS   DS    F'0'            SPACE FOR THE EVENT CONTROL BLOCK
IOPLADS  DC    4F'0'           SPACE FOR THE INPUT AND OUTPUT PARM
CONE     DC    CL6'000001'                                        @06A
LSPACEL  LSPACE MF=L                    LSPACE PARAMETER LIST     @03A
LSPACED  LSPACE MF=(L,DATA)             LSPACE OUTPUT DATA AREA   @03A
PUTBLOCK PUTLINE MF=L      LIST FORM OF THE PUTLINE MACRO INST
*
CMDUPT   DC    A(0)           ADDR USER PROFILE TABLE POINTER
CMDECT   DC    A(0)           ADDR ENVIRONMENT CONTROL TABLE
CMDECB   DC    A(ECB)         ADDR ECB (EVENT CONTROL BLOCK) POINTER
CMDPCL   DC    A(PARSEPCL)    ADDR PCL CREATED BY CP USING IKJPARM
CMDANS   DC    A(CMDANSR)     ADDR OF ANSWER PLACE
CMDCBUF  DC    A(0)           PTR TO COMMAND BUFFER
CMDUWA   DC    A(0)           PTR TO USER WORK AREA
CMDVEWA  DC    A(0)           PTR TO USER WORK AREA USER EXITS
*
ANS      DS    F
ECB      DS    F              ECB
PPL      DS    0F
UPT      DS    F
ECTAD    DS    F
ECBP     DS    F
PCL      DS    F
ANSW     DS    F
COMBUF   DS    F
*
CMDANSR  DC    A(0)           PLACE TO PUT ANSWER
*
ANSWER   DS    F                   ADDRESS POINTER FOR EXTRACT
         DS    0D
*
*DSA      DSECT
DSADCB   DS    X                       COPY OF CVTDCB - OP SYS
DSADCBXA EQU   X'80'                   XA OPERATING SYSTEM
WK       DS    F
WKCLRS   EQU   *                        CLEAR AREA AT INIT
MINPATHD DS    F                       MINIMUM NUMBER OF PATHS
WKFRETRK DS    F                        TOT FREE TRKS ON ALL V
WKFRECYL DS    F                        TOT FREE CYLS ON ALL V
WKTOTCYL DS    F                        TOT      CYLS ON ALL V
WKTOTTTK DS    F                        TOT      TRKS ON ALL V
WKCLRL   EQU   *-WKCLRS
WD       DS    D
WLOOKUP  DS    F
******** ***** OUTPUT TOTALS
OTTOTS   DC    C'  TOTAL CYL  TOTAL TRK   FREE CYL   FREE TRK'
*              C' ZZ,ZZZ,ZZ9 ZZ,ZZZ,ZZ9 ZZ,ZZZ,ZZ9 ZZ,ZZZ,ZZ9'
*                01234567890123456789012345678901234567890
OTTOTCYL EQU   OTTOTS+01,11
OTTOTTTK EQU   OTTOTS+12,11
OTFRECYL EQU   OTTOTS+23,11
OTFRETRK EQU   OTTOTS+34,11
******** ***** OUTPUT MESSAGE
OUTMESS  DS    CL79                    MESSAGE AREA
         ORG   OUTMESS                 RE-MAP
OUTMESSV DS    CL6,C                   VOLSER
OUTDENS  DS    CL3,C                   MOD     (M03/M09/M27/M54)
OUTMESSU DS    CL4,C                   UNIT
         DS    CL2
WORKAA   DS    0CL30
WA#FRAG  DS    CL5                     FREGMENTATION INDEX       @03C
         DS    C                                                 @03C
WA#CYL   DS    CL6                     FREE CYL
         DS    C                       ,
WA#TRK   DS    CL6                     FREE TRK
         DS    C                       ,
WA#EXT   DS    CL6                     EXTENTS
         DS    C                       /
WA#CCYL  DS    CL6                     CONTIG. CYL
         DS    C                       ,
WA#CTRK  DS    CL6                     CONTIG. TRK
         DS    CL2                     FILLER
INFLAG   DS    CL2                     INDEXED VTOC FLAG AREA
         DS    CL2
OUTMESSP DS    CL2,C                   %FULL
OUTMUSER DS    CL3,C                   UCBUSER-CONC. USERS
OUTMESSF EQU   OUTMESS+L'OUTMESS-*     FILLER (ASM ERR IF TOO LONG)
         DS    (OUTMESSF)X             FILLER (ASM ERR IF TOO LONG)
OUTMESSL EQU   *-OUTMESS
OUTMESSD DS    CL4,C                   3390
******** ***** ************************ **********************
DEVINFO  DS    5F'0'
ADRDEV   DS    F
ADRDEVL  DS    F
VOLSER   DS    CL6       VOLSER
UNIT     DS    CL4       UNIT
USCNWK   DS    XL100                    UCBSCAN WORK AREA       @03A
USCNUCB  DS    XL48                     UCBSCAN UCB COPY AREA   @03A
DCEAREA  DS    XL48                     @UCB COMMON SEGMENT     @03A
         UCBSCAN MF=(L,USCNPARM)                                @03A
         DS    0D
******** ***** ************************ **********************
*
***            THIS CODE COPIED FROM (TSUCBSCN)
*
******** ***** *********************** START OF UCB LOOKUP DSA
DSXALIST DS    0F                      PARMLIST FOR UCB
DSXAWA   DS    F                       %100-BYTE WORK AREA
DSXADEVT DS    F                       %DEV TYPE TO SEARCH
DSXAUCB  DS    F                       %UCB FULL WORD PTR
         DS    0D                      FOLLOWING MUST BE ALIGNED
DSXAWORK DS    CL100                   UCB WORK AREA
DSXAEUCB EQU   DSXAWORK+00,04          EMULATION CURR. UCB PTR
DSXAEILK EQU   DSXAWORK+04,04          EMULATION CVTILK2 ADDR
DSXACLAS DS    CL1                     DEVICE CLASS TO SEARCH
DSXAUCBP DS    F                       %UCB
******** ***** *********************** END OF UCB LOOKUP DSA
DSAEND   EQU  *                         LENGTH OF WORK
         IECDDCE                       UCB EXTENSION BLOCK
UCB      DSECT
         IEFUCBOB
         CVT   DSECT=YES               CVT
         PRINT GEN
         IKJCPPL
         IKJECT                                                         00460
LSPCRET  LSPACE MF=(D,DATA)                                     @03A
         IOSDUPI
         YREGS
         END
