         TITLE 'CATALOG ALL THE NEW DATASETS AT A NEW IPL PACK'
**********************************************************************
*  NAME        -   CATNEWDS                                          *
*                                                                    *
*  FUNCTION    -   READ THE VTOC OF A IPL DISK PACK (DDNAME NEWIPL)  *
*                  AND CHECK EVERY NONVSAM DATASET IN THE NEW        *
*                  IPLPACK TO VERIFY THE DATASET IS CATALOGED OR NOT *
*                  IF THE CATALOG ENTRY DOES NOT EXIST, IT WILL      *
*                  GENERATE IDCAMS CONTROL STATEMENTS TO DELETE AND  *
*                  AND DEFINE THE NEW NONVSAM DATASETS.              *
*                                                                    *
*                  NOTE: YOUR INSTALLATION MAY PUT THE SYSTEM FILES  *
*                  TO NON-IPL PACK AND YOU MUST VERIFY THE IDCAMS    *
*                  CONTROL STATEMENTS TO REMOVE THE IDCAMS STATEMENTS*
*                  THAT IT IS UNNECESSARY.                           *
*                                                                    *
*  SYNTAX      -   CATNEWDS                                          *
*                                                                    *
*  AUTHOR      -   ALBERT CHENG                                      *
*                                                                    *
*  VERSION     -   Z/OS 12                                           *
*                                                                    *
*  DATE        -   SEPT 1992 AND REVISED IN 2012                     *
*                                                                    *
*  OUTPUT      -   IDCAMS CONTROL STATEMENTS TO CATALOG NEW DATASETS *
*                  IF THE CATALOG IS ALREADY EXISTED, IT GENERATES   *
*                  AMS DELETE STATEMENT TO DELETE THE CATALOG ENTRY  *
*                  BEFORE DEFINING THE NON-VSAM CATALOG ENTRIES. THIS*
*                  PROGRAM ALSO GENERATES IDCAMS CONTROL STATEMENT   *
*                  (IE UNDER DDNAME FALLBACK) TO UNDO THE CATALOG    *
*                  CHANGE IF FALLBACK OF THE CATALOG UPDATE IS       *
*                  REQUIRED.                                         *
*                                                                    *
*     //CATNEWDS EXEC PGM=CATNEWDS                                   *
*     //STEPLIB  DD  DISP=SHR,DSN=LOADLIB,                           *
*     //         UNIT=DISK,VOL=SER=XXXXXX                            *
*     //CATALOG  DD  DISP=SHR,DSN=XXXX.CUTIN.CNTL(PARMCAT),          *
*     //         UNIT=DISK,VOL=SER=XXXXXX                            *
*     //FALLBACK DD  DISP=SHR,DSN=XXXX.FALLBK.PARM(PARMBACK),        *
*     //         UNIT=DISK,VOL=SER=XXXXXX                            *
*     //NEWIPL   DD  DISP=SHR,UNIT=SYSALLDA,VOL=SER=XXXXXX           *
*     //SYSPRINT DD  DUMMY                                           *
*     //SYSUDUMP DD  SYSOUT=*                                        *
*                                                                    *
* ABSTRACT                                                           *
* @01 USE BAKR AND PR INSTR                            AC 04/19/2012 *
*                                                                    *
**********************************************************************
CATNEWDS CSECT
         BAKR  R14,0                   SAVE RSA IN LINKAGE STACK  @01A
         USING CATNEWDS,R12            MAKE R12 BASE ADDRESS REG
         LR    R12,R15                 PUT BASE ADDRESS IN GR12
         LA    R11,SAVEAREA            GET @ CALLED RSA
         ST    R11,8(R13)              STORE IN CALLING RSA
         ST    R13,SAVEAREA+4          STORE CALLING RSA IN CALLED RSA
         LR    R13,R11                 SET GR13 TO CALLED RSA
*---------------------------------------------------------------------*
*   REGISTER USAGE:                                                   *
*                                                                     *
*        R3  -  ADDRESS OF NEWIPL DEB                                 *
*---------------------------------------------------------------------*
         RDJFCB (NEWIPL)
         LTR   R15,R15
         BNZ   NO_NEWIPL           BRANCH IF DDNAME IS NOT SPECIFIED
         LA    R15,JFCB
         USING JFCB,R15
         MVI   JFCBDSNM,X'04'
         MVC   JFCBDSNM+1(43),JFCBDSNM GENERATE DSN FOR FMT4
         MVI   JFCBELNM,C' '       CLEAR ANY MEMBER NAME
         MVC   JFCBELNM+1(7),JFCBELNM
         OI    JFCBTSDM,JFCNWRIT   SUPPRESS REWRITE OF JFCB
         DROP  R15
         OPEN  (NEWIPL,(INPUT)),TYPE=J
         LA    R15,NEWIPL
         USING IHADCB,R15
         TM    DCBOFLGS,DCBOFOPN      OPEN OK?
         SR    R3,R3
         ICM   R3,7,DCBDEBAD+1
         OPEN  (OUTFILE1,OUTPUT)
         LTR   R15,R15
         BNZ   OPEN_ERROR1
         OPEN  (OUTFILE2,OUTPUT)
         LTR   R15,R15
         BNZ   OPEN_ERROR2
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST   CLEAR BUFFER LIST
         OI    BFLHFL,BFLHDSCB        DSCBS TO BE READ WITH BUFFER
         MVI   BFLHNOE,1              ONE BUFFER LIST ENTRY
         LA    R4,DS1FMTID            ADDRESS OF DSCB BUFFER
         ST    R4,BFLEBUF             PLACE IN BUFFER LIST
         MVI   BFLELTH,DSCBLTH        DATA PORTION OF DSCB READ - DSN
*                                     SUPPLIED IN CVPL
         MVC   DS1DSNAM,BLANKS        MOVE IN STARTING DATA SET NAME
*                                     WORKAREA
         CVAFSEQ DEB=(R3),            READ FIRST DSCB                  X
               BUFLIST=BUFLIST,                                        X
               MF=(E,CVPL)
         USING CVPL,R1                ADDRESSABILITY TO CVPL
LOOP     LTR   R15,R15                ANY ERROR
         BNZ   ENDVTOC                CHECK DSCB
CHKDSCB  DS    0H
         CLI   DS1FMTID,C'1'          IS THIS A FORMAT 1 DSCB
         BNE   READDSCB               BRANCH IF NOT FORMAT 1 DSCB
         CLI   DS1DSORG,DS1DSGPS      PHYSICAL SEQUENTIAL  ??
         BE    DSNCHK                 YES THEN CONTINUE CHECKING
         CLI   DS1DSORG,DS1DSGPO      PARTITION DATA SET   ??
         BNE   READDSCB               NO THEN READ NEXT DSCB
DSNCHK   DS    0H                     CHECK THE EXISTENCE OF DATASET
         CLC   DS1DSNAM(11),=C'SYS1.VTOCIX'
         BE    READDSCB               IGNORE INDEX VTOC DSCB
*        CLC   DS1DSNAM(11),=C'SYS5.CUTIN.'
*        BE    READDSCB               IGNORE SYS5.CUTIN.*
         MVC   DSNAME2,DS1DSNAM
         MVC   DSNAME3,DS1DSNAM
         MVC   DSN,DS1DSNAM        GET DSN FROM VTOC DSCB
         MVI   CATSW,X'01'         SET TO DATASET UNCATALOGED
         LOCATE CATALOG            DATASET ALREADY CATALOG ??
         LTR   R15,R15             TEST RETURN CODE FROM CAMLST
         BNZ   DEFINE_STM          BRANCH IF DATA SET NOT CATALAGED
         CLC   DSN,DS1DSNAM
         BE    READDSCB            BRANCH IF DATA SET IS CATALAGED
         MVC   DSNAME2,DSN
         MVC   VOL2,OBTAINWK+6
         PUT   OUTFILE1,CTL_STM2   WRITE DELETE NVSAM CTL STM
         PUT   OUTFILE1,CTL_STM3   WRITE FIRST DEFINE NVSAM CTL STM
         PUT   OUTFILE1,CTL_STM4   WRITE SECOND DEFINE NVSAM CTL STM
         MVC   DSNAME5,DSN
         PUT   OUTFILE1,CTL_STM5   WRITE FIRST  DEFINE ALIAS CTL STM
         MVC   DSNAME6,DS1DSNAM
         PUT   OUTFILE1,CTL_STM6   WRITE SECOND DEFINE ALIAS CTL STM
         PUT   OUTFILE2,CTL_STM2   WRITE DELETE NVSAM CTL STM
         B     READDSCB            BRANCH IF DATA SET IS CATALAGED
DEFINE_STM DS  0H           WRITE DEFINE NONVSAM ENTRY
         PUT   OUTFILE1,CTL_STM3   WRITE FIRST DEFINE NVSAM CTL STM
         PUT   OUTFILE1,CTL_STM4   WRITE SECOND DEFINE NVSAM CTL STM
         PUT   OUTFILE2,CTL_STM2   WRITE DELETE NVSAM CTL STM TO
*                                  BACKUP PARMFILE
*        CLI   CATSW,X'00'
*        BNE   READDSCB            BRANCH IF DATASET IS CATALOGED
*        PUT   OUTFILE2,CTL_STM3   WRITE FIRST DEFINE NVSAM CTL STM
*        MVC   VOL5,OBTAINWK+6
*        PUT   OUTFILE2,CTL_STM5   WRITE SECOND DEFINE NVSAM CTL STM
*                                  FALLBACK CATALOG CONTROL STM
         DROP  R1
READDSCB DS    0H
         CVAFSEQ ACCESS=GT,MF=(E,CVPL)
         B     LOOP                   READ NEXT DSCB
*                                     GREATER THAN THE LAST READ
ENDVTOC  C     R15,ERROR4             IS RETURN CODE 4
         BNE   OTHER_ERROR            BRANCH IF NOT 4
         CLI   CVSTAT,STAT032         IS END OF DATA ?
         BE    RELEASE                RELEASE CVAF BUFFER
         CLI   CVSTAT,STAT012         INDEXED VTOC ?
         BE    NOTINDEX
OTHER_ERROR DS  0H
         DC    X'0000'                ABEND WITH 0C1
         WTO   'UNKNOWN ERROR'
RELEASE  CVAFDIR ACCESS=RLSE,                                          X
               BUFLIST=0,             DO NOT RELEASE USER BUFFER LIST  X
               IXRCDS=NOKEEP,         RELEASE CVAF VIER BUFFER LIST    X
               MF=(E,CVPL)            RELEASE CVAF I/O AREA
         CLOSE OUTFILE1
         CLOSE OUTFILE2
         CLOSE NEWIPL
EXIT     PR                                                        @01A
         LTORG
OPEN_ERROR1 DS  0H
         WTO   'OUTFILE1 OPEN ERROR'
         B     EXIT
OPEN_ERROR2 DS  0H
         WTO   'OUTFILE2 OPEN ERROR'
         B     EXIT
NO_NEWIPL  DS  0H
         WTO   'NEWIPL DDNAME IS NOT SPECIFIED'
         B     EXIT
NOTINDEX DS  0H
         WTO   'THE DASD IS NOT INDEXED VTOC'
         B     EXIT
CATSW    DC    X'00'                  PROGRAM CATSW
ERROR4   DC    F'4'                   ERROR RETURN CODE 4
OUTFILE1 DCB   DDNAME=CATALOG,DSORG=PS,RECFM=FB,MACRF=PM,LRECL=80       WRI00420
OUTFILE2 DCB   DDNAME=FALLBACK,DSORG=PS,RECFM=FB,MACRF=PM,LRECL=80      WRI00420
CTL_STM2 DS    0H
         DC    CL8' DELETE '
DSNAME2  DC    CL44' '
         DC    CL14'NVSAM NSCR  /*'
VOL2     DC    CL6' '
         DC    CL18' */'
CTL_STM3 DS    0H
         DC    CL21' DEFINE NONVSAM(NAME('
DSNAME3  DC    CL44' '
         DC    CL3') -'
         DC    CL12' '
CTL_STM4 DC    CL80'    VOLUME(******) DEVT(0000))'
CTL_STM5 DS    0H
         DC    CL21' DEFINE   ALIAS(NAME('
DSNAME5  DC    CL44' '
         DC    CL3') -'
         DC    CL12' '
CTL_STM6 DS    0H
         DC    CL7'   REL('
DSNAME6  DC    CL44' '
         DC    CL29'))'
BLANKS   DC    CL44' '
CATALOG  CAMLST NAME,DSN,,OBTAINWK
DSN      DC    CL44' '            DATA SET TO BE SERACHED
OLDVOL   DC    CL6' '             VOLUME TO BE SEARCHED
         DC    CL2' '             BLANK
COMMENT  DC    CL24' '            ERROR MESSAGE
OBTAINWK DC    CL140' '           CAMLST WORK AREA
         DC    CL125' '
NEWIPL   DCB   DSORG=PS,                                               X
               MACRF=R,                                                X
               DDNAME=NEWIPL,                                          X
               DEVD=DA,                                                X
               RECFM=F,                                                X
               EXLST=JFCBADR
JFCBADR  DS    0F
         DC    X'87'
         DC    AL3(JFCB)
JFCB     DS    0C
         IEFJFCBN                     JFCB MAPPING
BUFLIST  ICVAFBFL DSECT=NO            BUFFER LIST
         IECSDSL1 (1)                 FORMAT 1 DSCB MAPPING
DSCBLTH  EQU   *-IECSDSL1-L'DS1DSNAM  LENGTH OF DATA PORTION OF DSCB
CVPL     CVAFSEQ ACCESS=GTEQ,         READ DSCB WITH DSN >= SUPPLIED   X
               IXRCDS=KEEP,           KEEP VIERS IN STORAGE DURING     X
               DSN=DS1DSNAM,          SUPPLIED DATA SET NAME           X
               BUFLIST=BUFLIST,                                        X
               IOAREA=NOKEEP,                                          X
               MF=L
         ORG   CVPL                   EXPAND MAP OVER LIST
CVPLMAP  ICVAFPL DSECT=NO             CVPL MAP
*---------------------------------------------------------------------*
*     MISC DATA AREAS                                                 *
*---------------------------------------------------------------------*
SAVEAREA DS    18F
         DCBD  DSORG=PS,DEVD=DA
         YREGS
         END
