./ ADD NAME=$EPILOG  0100-03071-03071-0734-00013-00013-00000-MACRO
         MACRO
&LABEL   $EPILOG &RC
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS
         L     R13,4(R13)          GET BACK CHAIN POINTER
         L     R0,16(R13)          GET SAVEAREA LENGTH
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         AIF   (T'&RC EQ 'O').SPEC
         LA    R15,&RC             SET RETURN CODE
.SPEC    ANOP
         BR    R14                 RETURN TO CALLER
         MEND
./ ADD NAME=$PROLOG  0100-03071-03071-0734-00090-00090-00000-MACRO
         MACRO
&LABEL   $PROLOG &LV=0
.**********************************************************************
.*
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA
.*                                             REG 10 IS BASE
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES
.*
.**********************************************************************
         LCLA  &AA,&AB,&AC
         GBLB  &PRORG
&AC      SETA  4096
&LABEL   CSECT
         B     32(R15)             BRANCH AROUND
         DC    AL1(26)
         DC    CL8'&LABEL'         CSECT NAME
         DC    C'-'
         DC    CL8'&SYSDATE'       COMPILE DATE
         DC    C'-'
         DC    CL8'&SYSTIME'       COMPILE TIME
         CNOP  0,4                 ALIGNMENT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REG
         USING &LABEL,R12          INFORM ASSEMBLER
         AIF   (&LV GT 4023).MERR
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER
         AIF   (&LV+72 LE 256).XC2
         AIF   (&LV+72 LE 512).XC1
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE
         LR    R2,R1               SAVE POINTER IN EVEN REG
         LA    R4,1(R1)            SET RECEIVING POINTER
         LR    R5,R0               SET RECEIVING LENGTH
         BCTR  R5,R0               DECREMENT LENGTH
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         LA    R3,1                SET SENDING LENGTH
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'
         AGO   .STORE
.XC1     ANOP
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA
         AGO   .STORE
.XC2     ANOP
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA
.STORE   ANOP
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS
         L     R15,16(R13)         RESTORE REG 15
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN
         LR    R13,R11             SET SAVEAREA POINTER
         AIF   (N'&SYSLIST EQ 0).MEND
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG
         DROP  R12                 DROP ASSUMED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
.SKIPIT  ANOP
&AA      SETA  2
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).MEXIT
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MEXIT   ANOP
         AIF   (&PRORG).MEX2
         SPACE
.MEX2    ANOP
&AA      SETA  &LV+72
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'
         MEXIT
.MEND    ANOP
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'
         AGO   .MEXIT
.MERR    ANOP
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'
         AGO   .MEXIT
         MEND
./ ADD NAME=@ENT     0100-03071-03071-0716-00157-00157-00000-MACRO
         MACRO
&SUBR    @ENT  &BASES,&SAVE,&CSECT,&DSA=NO
.*
.* THIS MACRO COURTESY OF SHARE INC.
.* MVS PERFORMANCE PROJECT, CBT MODS TAPE, VTOC SYSTEM
.* SUBMITTER RODGER MILLER, FIREMANS FUND
.*
.*   THIS MACRO, USED WITH THE @RET  MACRO, WILL PERFORM
.*   STANDARD HOUSEKEEPING FOR A CSECT, INCLUDING SAVEAREA
.*   CONSTRUCTION AND CHAINING, AND GETTING SOME STORAGE,
.*   IF THAT IS DESIRED.
.*   THE LEAVE MACRO WILL FREE THE GOTTEN STORAGE
.*   THE OPERANDS ARE
.*       &SUBR    @ENT   &BASES,&SAVE,&CSECT
.*    WHERE
.*       &SUBR    IS THE NAME OF THE CSECT
.*       &BASES   ARE THE BASE REGISTERS FOR THE ROUTINE
.*       &SAVE    IS THE LABEL FOR A SAVEAREA, OR A SUBPOOL
.*                AND LENGTH FOR THE GETMAIN
.*       &CSECT   TO CONTINUE AN EXISTING CSECT WITH ENTRY
.*                POINT &SUBR
.*
.*    EXAMPLES -
.*               @ENT 13,*
.*
.*       THIS WILL GENERATE NON-REENTRANT CODE, USING SAVEAREA
.*       AS THE SAVE AREA LABEL, AND REGISTER 13 FOR THE BASE
.*       REGISTER.
.*
.*       RENTMOD  @ENT (12,11),(,LDSECT)
.*
.*       THIS WILL GENERATE REENTRANT CODE WITH REGISTERS 12 AND
.*       11 FOR BASE REGISTERS.  A GETMAIN WILL BE DONE FOR THE
.*       DEFAULT SUBPOOL (0) WITH A LENGTH 'LDSECT'.
.*
         GBLC  &LV,&SP
         LCLA  &K,&N
         LCLC  &AREA,&B(16),&SUBNAME,&S
&SUBNAME SETC  '&SUBR'
         AIF   ('&SUBNAME' NE '').SUBSPEC
&SUBNAME SETC  'MAIN'         DEFAULT CSECT NAME
.SUBSPEC AIF   ('&CSECT' EQ '').NOTENT  IS IT AN ENTRY POINT?
&CSECT   CSECT
&SUBNAME DS    0F
         AGO   .CSSPEC
.NOTENT  ANOP
&SUBNAME CSECT
.CSSPEC  ANOP
         SAVE  (14,12),T,&SUBNAME-&SYSDATE-&SYSTIME  SAVE REGS
         AIF   ('&BASES(1)' EQ '15' OR '&BASES' EQ '').R15SET
         AIF   ('&BASES(1)' EQ '13' AND '&SAVE' NE '').R15SET
         LR    &BASES(1),15  SET FIRST BASE REG
.R15SET  CNOP  0,4
&S       SETC  '&SUBNAME'
         AIF   (N'&SAVE EQ 2).P4   SUBPOOL, SIZE SPEC?
         AIF   ('&SAVE' EQ '').P3  NO SAVEAREA - DEFAULT
&AREA    SETC  '&SAVE'
         AIF   ('&SAVE' NE '*').P2
&AREA    SETC  'SAVEAREA'
.P2      AIF   ('&BASES(1)' NE '13').P4
&S       SETC  '*'
         USING &SUBNAME,15
         ST    14,&AREA+4
         LA    14,&AREA
         ST    14,8(13)
         L     14,&AREA+4
         ST    13,&AREA+4
         BAL   13,*+76        SKIP AROUND THE SAVEAREA
         DROP  15
         AGO   .P4
.P3      AIF   ('&BASES(1)' NE '13').P4
         MNOTE 8,'*** CONTENTS OF REG 13 ARE LOST.  NO SAVE AREA WAS ESX
               TABLISHED.'
.P4      AIF   ('&BASES(1)' NE '14' OR '&SAVE' EQ '').P5
         MNOTE 8,'*** MACRO RESTRICTION - REG 14 MUST NOT BE USED AS THX
               E FIRST BASE REGISTER IF A SAVE AREA IS USED.'
.P5      AIF   ('&BASES' EQ '').P9
&N       SETA  N'&BASES
.P6      ANOP
&K       SETA  &K+1
&B(&K)   SETC  ','.'&BASES(&K)'
         AIF   (N'&SAVE EQ 1).PE
         AIF   ('&BASES(&K)' NE '13').P7
         MNOTE 8,'*** REG 13 MAY NOT BE USED AS A BASE REGISTER FOR REEX
               NTRANT CODE.'
         AGO   .P7
.PE      AIF   ('&BASES(&K+1)' NE '13' OR '&SAVE' EQ '').P7
         MNOTE 8,'*** WHEN USING A SAVE AREA, REG 13 MAY NOT BE USED ASX
                A SECONDARY BASE REGISTER.'
.P7      AIF   ('&BASES(&K+1)' NE '').P6
         USING &S&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)&B(9)&B(10)&B(X
               11)&B(12)&B(13)&B(14)&B(15)&B(16)
&K       SETA  1
         AIF   ('&BASES(1)' NE '13' OR '&SAVE' EQ '').P8
&AREA    DC    18F'0'
.P8      AIF   (&K GE &N).P10
         LA    &BASES(&K+1),X'FFF'(&BASES(&K))
         LA    &BASES(&K+1),1(&BASES(&K+1))
&K       SETA  &K+1
         AGO   .P8
.P9      USING &SUBNAME,15
.P10     AIF   (N'&SAVE GE 2).P13
         AIF   ('&SAVE' EQ '' OR '&BASES(1)' EQ '13').P12
         AIF   ('&SAVE'(1,1) GE '0').P16  NUMERIC MEANS A PASSED AREA
         ST    14,&AREA+4
         LA    14,&AREA
         ST    14,8(13)
         L     14,&AREA+4
         ST    13,&AREA+4
.P11     BAL   13,*+76       SKIP AROUND THE SAVEAREA
&AREA    DC    18F'0'
.P12     MEXIT
.P13     ANOP
&LV      SETC  '&SAVE(2)'
&SP      SETC  '0'
         AIF   ('&SAVE(1)' EQ '').P14
&SP      SETC  '&SAVE(1)'
.P14     CNOP  0,4          DO A GETMAIN FOR THE AREA
         BAL   1,*+8          POINT THE SP AND LV
ENT&SYSNDX DC  AL1(&SP)       SUBPOOL FOR THE GETMAIN
         DC    AL3(&LV)       LENGTH OF THE GETMAIN
         L     0,0(1)         GET THE DATA IN REG 1
         SVC   10             ISSUE THE GETMAIN
.*                            CHAIN THE SAVEAREAS
         ST    13,4(1)        PRIOR SAVEAREA ADDRESS TO MINE
         ST    1,8(13)        MY SAVEAREA ADDRESS TO HIS
         LR    2,13           KEEP THE SAVEAREA ADDRESS FOR REGS
         LR    13,1           THIS IS MY SAVEAREA
         AIF   ('&DSA' NE 'YES').NODSA                        11/04/79
DSA      DSECT                                                11/04/79
         DS    9D                  INITIAL SAVE AREA          11/04/79
         USING DSA,13              TELL ASM                   11/04/79
         AIF   ('&CSECT' NE '').DSA1 NO MAINLINE CSECT        11/04/79
&SUBNAME CSECT                     CONTINUE NORMAL CSECT      11/04/79
         AGO   .NODSA              EXIT                       11/04/79
.DSA1    ANOP                                                 11/04/79
&CSECT   CSECT                     CONTINUE NORMAL CSECT      11/04/79
.NODSA   ANOP                                                 11/04/79
         AIF   ('&SAVE(3)' NE 'C').P15   CLEAR THE SAVEAREA?
         LA    4,12(13)       YES, POINT PAST THE CHAIN
         L     5,ENT&SYSNDX   GET THE SIZE
         LA    6,12           MINUS THE CHAIN AREA (12 BYTES )
         SR    5,6            GIVES THE AMOUNT TO CLEAR
         SR    7,7            CLEAR THE FROM COUNT AND CLEAR BYTE
         MVCL  4,6            WHEE, CLEAR IT OUT
         LM    0,7,20(2)      RESTORE THE ORIGINAL REGISTERS
         MEXIT
.P15     ANOP
         LM    0,2,20(2)      RESTORE ORIGINAL REGS
         MEXIT
.P16     L     1,&AREA+0(1)   NUMERIC &SAVE IMPLIES A PASSED SAVEAREA
         ST    13,4(1)        PRIOR SAVEAREA ADDRESS TO MINE
         ST    1,8(13)        MY SAVEAREA ADDRESS TO HIS
         LR    2,13           KEEP THE SAVEAREA ADDRESS FOR REGS
         LR    13,1           THIS IS MY SAVEAREA
         LM    0,2,20(2)      RESTORE ORIGINAL REGS
         MEND
./ ADD NAME=@RET     0101-03071-03071-0743-00037-00036-00037-MACRO
         MACRO
&NAME    @RET  &EQ,&RC=,&FREE=YES
.*..................................>> SEE @ENT MACRO FOR CREDITS
         GBLC  &LV,&SP                 GLOBALS-SET IN @ENT
&NAME    LR    2,13                    SAVE CURRENT SAVE AREA
         L     13,4(13)                GET CALLER SAVE AREA
         AIF   ('&RC' EQ '').L0        SKIP IF R15 ALREADY SET
         LA    15,&RC                  LOAD THE RETURN CODE
.L0      STM   15,1,16(13)             STORE RETURN REGS
         AIF   ('&LV' EQ '').L1        ANYTHING TO FREE?
         AIF   ('&FREE' EQ 'NO').L1    OVERRIDE FREE CODE?     25JUL84
         FREEMAIN R,LV=&LV,SP=&SP,A=(2) FREE THE AREA
.L1      RETURN (14,12),T              RETURN TO CALLER
         AIF   ('&EQ' NE 'EQ').L4      REGISTERS TOO?
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.L4      MEND
./ ADD NAME=JVDENTER 0100-14245-14245-1506-00074-00074-00000-MACRO
         MACRO , JVDENTER - V1M00 - 01/28/74
&LABEL   JVDENTER                                                      +
               &BASE=(11),                                             +
               &REGS=(14,12),                                          +
               &ID=,                                                   +
               &VERSION=,                                              +
               &DSA=72,                                                +
               &ORIGIN=*,                                              +
               &CFL=YES
.*
         LCLC  &EPID,&BASR,&START
.*
.BEGIN   AIF   ('&LABEL' EQ '').IDT
.*
         SPACE
&LABEL   DS    0H
         ENTRY &LABEL
         SPACE
.*
.IDT     AIF   (T'&ID EQ 'O').IDD
&EPID    SETC  '&ID'
         AGO   .VER
.IDD     AIF   ('&LABEL' EQ '').IDC
&EPID    SETC  '&LABEL'
         AGO   .VER
.IDC     ANOP
&EPID    SETC  '&SYSECT'
.VER     AIF   (T'&VERSION EQ 'O').GEN
&EPID    SETC  '&EPID-&VERSION-&SYSDATE-&SYSTIME'
         MNOTE *,'       &EPID'
.*
.GEN     ANOP
&BASR    SETC  '&BASE(1)'
.*
&START   SETC  '&ORIGIN'
         AIF   ('&ORIGIN' NE '@').START
&START   SETC  '&SYSECT'
.START   AIF   ('&ORIGIN' EQ '*').HERE
.*
         USING &START,&BASR
         SAVE  &REGS,,&EPID
         BALR  &BASR,0
         LA    14,*-&ORIGIN
         SLR   &BASR,14
         LR    2,13
         SPACE
.*
         AGO   .GETDSA
.HERE    ANOP
.*
         USING &START,&BASR
         SAVE  &REGS,,&EPID
         LR    &BASR,15
         LR    2,13
         SPACE
.*
.GETDSA  AIF   ('&DSA' EQ '0').NOCFL
.*
         LA    3,&DSA
         GETMAIN R,LV=(3)
         ST    3,0(1)
         ST    13,4(1)
         LR    13,1
.*
         AIF   ('&CFL' EQ 'NO').NOCFL
.*
         ST    1,8(2)
.*
.NOCFL   ANOP
.*
         LM    14,04,12(2)
         SPACE
.*
         MEND
./ ADD NAME=JVDEQU   0100-14245-14245-1506-00022-00022-00000-MACRO
         MACRO
&L       JVDEQU &O
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
.*
         MEND
./ ADD NAME=JVDLEAVE 0100-14245-14245-1506-00055-00055-00000-MACRO
         MACRO , JVDLEAVE - V1M00 - 01/28/74
&LABEL   JVDLEAVE                                                      +
               &REGS=(14,12),                                          +
               &RC=,                                                   +
               &DSA=
.*
         LCLC  &L
.*
         AIF   ('&DSA' EQ '0').NODSA
.*
&LABEL   LH    0,2(13)
         LR    1,13
         L     13,4(13)
.*
         AIF   ('&RC' NE '(15)').FREE
.*
         LR    2,15
.*
.FREE    ANOP
.*
         FREEMAIN R,LV=(0),A=(1)
.*
.RCCHK   AIF   ('&RC' EQ '').NORC
         AIF   ('&RC' NE '(15)').RTRN
.*
         LR    15,2
.*
         AGO   .RTRNN
.RTRN    AIF   ('&RC'(1,1) NE '(').RTRNC
.*
         LR    15,&RC(1)
.*
.RTRNN   ANOP
.*
&L       RETURN &REGS,RC=(15)
         SPACE
.*
         MEXIT
.RTRNC   ANOP
.*
&L       RETURN &REGS,RC=&RC
         SPACE
.*
         MEXIT
.NORC    ANOP
.*
&L       RETURN &REGS
         SPACE
.*
         MEXIT
.NODSA   ANOP
&L       SETC  '&LABEL'
         AGO   .RCCHK
.*
         MEND
